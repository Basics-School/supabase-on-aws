Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: Supabase/VPC
    Metadata:
      aws:cdk:path: Supabase/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone: us-west-2a
      CidrBlock: 10.0.0.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Supabase/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: Supabase/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: Supabase/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      Tags:
        - Key: Name
          Value: Supabase/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone: us-west-2b
      CidrBlock: 10.0.32.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Supabase/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: Supabase/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet3Subnet631C5E25:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone: us-west-2c
      CidrBlock: 10.0.64.0/19
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: Supabase/VPC/PublicSubnet3
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet3/Subnet
  VPCPublicSubnet3RouteTable98AE0E14:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: Supabase/VPC/PublicSubnet3
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet3/RouteTable
  VPCPublicSubnet3RouteTableAssociation427FE0C6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet3RouteTable98AE0E14
      SubnetId:
        Ref: VPCPublicSubnet3Subnet631C5E25
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet3/RouteTableAssociation
  VPCPublicSubnet3DefaultRouteA0D29D46:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet3RouteTable98AE0E14
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: Supabase/VPC/PublicSubnet3/DefaultRoute
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone: us-west-2a
      CidrBlock: 10.0.96.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Supabase/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: Supabase/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone: us-west-2b
      CidrBlock: 10.0.128.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Supabase/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: Supabase/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet2/DefaultRoute
  VPCPrivateSubnet3Subnet3EDCD457:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone: us-west-2c
      CidrBlock: 10.0.160.0/19
      MapPublicIpOnLaunch: false
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
        - Key: Name
          Value: Supabase/VPC/PrivateSubnet3
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet3/Subnet
  VPCPrivateSubnet3RouteTable192186F8:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: Name
          Value: Supabase/VPC/PrivateSubnet3
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet3/RouteTable
  VPCPrivateSubnet3RouteTableAssociationC28D144E:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet3RouteTable192186F8
      SubnetId:
        Ref: VPCPrivateSubnet3Subnet3EDCD457
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet3/RouteTableAssociation
  VPCPrivateSubnet3DefaultRoute27F311AE:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet3RouteTable192186F8
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: Supabase/VPC/PrivateSubnet3/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Supabase/VPC
    Metadata:
      aws:cdk:path: Supabase/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: Supabase/VPC/VPCGW
  Mesh73A573F6:
    Type: AWS::AppMesh::Mesh
    Properties:
      MeshName: Supabase
      Spec: {}
    Metadata:
      aws:cdk:path: Supabase/Mesh/Resource
  ClusterEB0386A7:
    Type: AWS::ECS::Cluster
    Metadata:
      aws:cdk:path: Supabase/Cluster/Resource
  ClusterDefaultServiceDiscoveryNamespaceC336F9B4:
    Type: AWS::ServiceDiscovery::PrivateDnsNamespace
    Properties:
      Name: supabase.local
      Vpc:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Cluster/DefaultServiceDiscoveryNamespace/Resource
  Cluster3DA9CCBA:
    Type: AWS::ECS::ClusterCapacityProviderAssociations
    Properties:
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      Cluster:
        Ref: ClusterEB0386A7
      DefaultCapacityProviderStrategy: []
    Metadata:
      aws:cdk:path: Supabase/Cluster/Cluster
  SupabaseMailSecret777E0288:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Supabase - WorkMail SMTP Secret
      GenerateSecretString:
        GenerateStringKey: password
        PasswordLength: 64
        SecretStringTemplate:
          Fn::Join:
            - ""
            - - '{"host":"smtp.mail.us-west-2.awsapps.com","port":"465","username":"info","password":"your-super-secret-smtp-password","email_address":"info@supabase-'
              - Ref: AWS::AccountId
              - .awsapps.com"}
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/Secret/Resource
  SupabaseMailCreateWorkMailOrgFunctionServiceRoleD8B016DF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgFunction/ServiceRole/Resource
  SupabaseMailCreateWorkMailOrgFunctionServiceRoleDefaultPolicyBE25F8EA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - workmail:DescribeOrganization
              - workmail:CreateOrganization
              - workmail:DeleteOrganization
              - ses:DescribeActiveReceiptRuleSet
              - ses:SetActiveReceiptRuleSet
              - ses:CreateReceiptRuleSet
              - ses:CreateReceiptRule
              - ses:DeleteReceiptRule
              - ses:VerifyDomainIdentity
              - ses:VerifyDomainDkim
              - ses:SetIdentityEmailNotificationEnabled
              - ses:PutIdentityPolicy
              - ses:DeleteIdentityPolicy
              - ses:DeleteIdentity
              - ds:DescribeDirectories
              - ds:CreateIdentityPoolDirectory
              - ds:DeleteDirectory
              - ds:ListAuthorizedApplications
              - ds:CreateAlias
              - ds:AuthorizeApplication
              - ds:UnauthorizeApplication
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SupabaseMailCreateWorkMailOrgFunctionServiceRoleDefaultPolicyBE25F8EA
      Roles:
        - Ref: SupabaseMailCreateWorkMailOrgFunctionServiceRoleD8B016DF
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgFunction/ServiceRole/DefaultPolicy/Resource
  SupabaseMailCreateWorkMailOrgFunction65AFD240:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: 4432a02198fed87df66c14953f6f885e81713cd655c1083b0fffeac0b1c383ba.zip
      Role:
        Fn::GetAtt:
          - SupabaseMailCreateWorkMailOrgFunctionServiceRoleD8B016DF
          - Arn
      Description: Supabase - Create WorkMail Org Function
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - SupabaseMailCreateWorkMailOrgFunctionServiceRoleDefaultPolicyBE25F8EA
      - SupabaseMailCreateWorkMailOrgFunctionServiceRoleD8B016DF
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgFunction/Resource
      aws:asset:path: asset.4432a02198fed87df66c14953f6f885e81713cd655c1083b0fffeac0b1c383ba
      aws:asset:is-bundled: true
      aws:asset:property: Code
  SupabaseMailCheckWorkMailOrgFunctionServiceRole7B5DBA72:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CheckWorkMailOrgFunction/ServiceRole/Resource
  SupabaseMailCheckWorkMailOrgFunctionServiceRoleDefaultPolicyD20E52AA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: workmail:DescribeOrganization
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SupabaseMailCheckWorkMailOrgFunctionServiceRoleDefaultPolicyD20E52AA
      Roles:
        - Ref: SupabaseMailCheckWorkMailOrgFunctionServiceRole7B5DBA72
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CheckWorkMailOrgFunction/ServiceRole/DefaultPolicy/Resource
  SupabaseMailCheckWorkMailOrgFunction6C80E623:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: 93991e1e75ef47660fd52f30057a1e6e42526460850a9172ec5fd54a71b8e027.zip
      Role:
        Fn::GetAtt:
          - SupabaseMailCheckWorkMailOrgFunctionServiceRole7B5DBA72
          - Arn
      Description: Supabase - Check state WorkMail Org Function
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - SupabaseMailCheckWorkMailOrgFunctionServiceRoleDefaultPolicyD20E52AA
      - SupabaseMailCheckWorkMailOrgFunctionServiceRole7B5DBA72
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CheckWorkMailOrgFunction/Resource
      aws:asset:path: asset.93991e1e75ef47660fd52f30057a1e6e42526460850a9172ec5fd54a71b8e027
      aws:asset:is-bundled: true
      aws:asset:property: Code
  SupabaseMailCreateWorkMailOrgProviderframeworkonEventServiceRole10A485C8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-onEvent/ServiceRole/Resource
  SupabaseMailCreateWorkMailOrgProviderframeworkonEventServiceRoleDefaultPolicyB7BDB818:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCreateWorkMailOrgFunction65AFD240
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCreateWorkMailOrgFunction65AFD240
                        - Arn
                    - :*
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCheckWorkMailOrgFunction6C80E623
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCheckWorkMailOrgFunction6C80E623
                        - Arn
                    - :*
          - Action: states:StartExecution
            Effect: Allow
            Resource:
              Ref: SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineBDC7731B
        Version: "2012-10-17"
      PolicyName: SupabaseMailCreateWorkMailOrgProviderframeworkonEventServiceRoleDefaultPolicyB7BDB818
      Roles:
        - Ref: SupabaseMailCreateWorkMailOrgProviderframeworkonEventServiceRole10A485C8
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  SupabaseMailCreateWorkMailOrgProviderframeworkonEvent62EFE440:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - SupabaseMailCreateWorkMailOrgProviderframeworkonEventServiceRole10A485C8
          - Arn
      Description: AWS CDK resource provider framework - onEvent (Supabase/SupabaseMail/CreateWorkMailOrgProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - SupabaseMailCreateWorkMailOrgFunction65AFD240
              - Arn
          USER_IS_COMPLETE_FUNCTION_ARN:
            Fn::GetAtt:
              - SupabaseMailCheckWorkMailOrgFunction6C80E623
              - Arn
          WAITER_STATE_MACHINE_ARN:
            Ref: SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineBDC7731B
      Handler: framework.onEvent
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - SupabaseMailCreateWorkMailOrgProviderframeworkonEventServiceRoleDefaultPolicyB7BDB818
      - SupabaseMailCreateWorkMailOrgProviderframeworkonEventServiceRole10A485C8
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-onEvent/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteServiceRole86378AC4:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-isComplete/ServiceRole/Resource
  SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteServiceRoleDefaultPolicy3FDC3479:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCreateWorkMailOrgFunction65AFD240
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCreateWorkMailOrgFunction65AFD240
                        - Arn
                    - :*
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCheckWorkMailOrgFunction6C80E623
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCheckWorkMailOrgFunction6C80E623
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteServiceRoleDefaultPolicy3FDC3479
      Roles:
        - Ref: SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteServiceRole86378AC4
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-isComplete/ServiceRole/DefaultPolicy/Resource
  SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteB366BC92:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteServiceRole86378AC4
          - Arn
      Description: AWS CDK resource provider framework - isComplete (Supabase/SupabaseMail/CreateWorkMailOrgProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - SupabaseMailCreateWorkMailOrgFunction65AFD240
              - Arn
          USER_IS_COMPLETE_FUNCTION_ARN:
            Fn::GetAtt:
              - SupabaseMailCheckWorkMailOrgFunction6C80E623
              - Arn
      Handler: framework.isComplete
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteServiceRoleDefaultPolicy3FDC3479
      - SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteServiceRole86378AC4
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-isComplete/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SupabaseMailCreateWorkMailOrgProviderframeworkonTimeoutServiceRole6C5EB94C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-onTimeout/ServiceRole/Resource
  SupabaseMailCreateWorkMailOrgProviderframeworkonTimeoutServiceRoleDefaultPolicyBF6B57B8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCreateWorkMailOrgFunction65AFD240
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCreateWorkMailOrgFunction65AFD240
                        - Arn
                    - :*
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCheckWorkMailOrgFunction6C80E623
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCheckWorkMailOrgFunction6C80E623
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: SupabaseMailCreateWorkMailOrgProviderframeworkonTimeoutServiceRoleDefaultPolicyBF6B57B8
      Roles:
        - Ref: SupabaseMailCreateWorkMailOrgProviderframeworkonTimeoutServiceRole6C5EB94C
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-onTimeout/ServiceRole/DefaultPolicy/Resource
  SupabaseMailCreateWorkMailOrgProviderframeworkonTimeout159AA7FF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - SupabaseMailCreateWorkMailOrgProviderframeworkonTimeoutServiceRole6C5EB94C
          - Arn
      Description: AWS CDK resource provider framework - onTimeout (Supabase/SupabaseMail/CreateWorkMailOrgProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - SupabaseMailCreateWorkMailOrgFunction65AFD240
              - Arn
          USER_IS_COMPLETE_FUNCTION_ARN:
            Fn::GetAtt:
              - SupabaseMailCheckWorkMailOrgFunction6C80E623
              - Arn
      Handler: framework.onTimeout
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - SupabaseMailCreateWorkMailOrgProviderframeworkonTimeoutServiceRoleDefaultPolicyBF6B57B8
      - SupabaseMailCreateWorkMailOrgProviderframeworkonTimeoutServiceRole6C5EB94C
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/framework-onTimeout/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineRoleA3022756:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: states.us-west-2.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/waiter-state-machine/Role/Resource
  SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineRoleDefaultPolicy75ED878D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteB366BC92
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteB366BC92
                        - Arn
                    - :*
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseMailCreateWorkMailOrgProviderframeworkonTimeout159AA7FF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseMailCreateWorkMailOrgProviderframeworkonTimeout159AA7FF
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineRoleDefaultPolicy75ED878D
      Roles:
        - Ref: SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineRoleA3022756
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/waiter-state-machine/Role/DefaultPolicy/Resource
  SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineBDC7731B:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString:
        Fn::Join:
          - ""
          - - '{"StartAt":"framework-isComplete-task","States":{"framework-isComplete-task":{"End":true,"Retry":[{"ErrorEquals":["States.ALL"],"IntervalSeconds":5,"MaxAttempts":360,"BackoffRate":1}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"framework-onTimeout-task"}],"Type":"Task","Resource":"'
            - Fn::GetAtt:
                - SupabaseMailCreateWorkMailOrgProviderframeworkisCompleteB366BC92
                - Arn
            - '"},"framework-onTimeout-task":{"End":true,"Type":"Task","Resource":"'
            - Fn::GetAtt:
                - SupabaseMailCreateWorkMailOrgProviderframeworkonTimeout159AA7FF
                - Arn
            - '"}}}'
      RoleArn:
        Fn::GetAtt:
          - SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineRoleA3022756
          - Arn
    DependsOn:
      - SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineRoleDefaultPolicy75ED878D
      - SupabaseMailCreateWorkMailOrgProviderwaiterstatemachineRoleA3022756
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/CreateWorkMailOrgProvider/waiter-state-machine/Resource
  SupabaseMailOrganization367310F9:
    Type: Custom::WorkMailOrganization
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - SupabaseMailCreateWorkMailOrgProviderframeworkonEvent62EFE440
          - Arn
      Region: us-west-2
      Alias:
        Fn::Join:
          - ""
          - - supabase-
            - Ref: AWS::AccountId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/Organization/Default
  SupabaseMailUserCustomResourcePolicyEFB2A15A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: workmail:CreateUser
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: SupabaseMailUserCustomResourcePolicyEFB2A15A
      Roles:
        - Ref: AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/User/CustomResourcePolicy/Resource
  SupabaseMailUser6287674D:
    Type: Custom::WorkMailUser
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd22872D164C4C
          - Arn
      Create:
        Fn::Join:
          - ""
          - - '{"service":"WorkMail","action":"createUser","parameters":{"OrganizationId":"'
            - Ref: SupabaseMailOrganization367310F9
            - '","DisplayName":"info","Name":"info@supabase-'
            - Ref: AWS::AccountId
            - '.awsapps.com","Password":"{{resolve:secretsmanager:'
            - Ref: SupabaseMailSecret777E0288
            - :SecretString:password::}}"},"physicalResourceId":{"responsePath":"UserId"}}
      InstallLatestAwsSdk: true
    DependsOn:
      - SupabaseMailUserCustomResourcePolicyEFB2A15A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/SupabaseMail/User/Resource/Default
  AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource
  AWS679f53fac002430cb0da5b7982bd22872D164C4C:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: 6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50.zip
      Role:
        Fn::GetAtt:
          - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
          - Arn
      FunctionName: CreateWorkMailUserFunction
      Handler: index.handler
      Runtime: nodejs14.x
      Timeout: 120
    DependsOn:
      - AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2
    Metadata:
      aws:cdk:path: Supabase/AWS679f53fac002430cb0da5b7982bd2287/Resource
      aws:asset:path: asset.6dbd112fe448437b3438da4382c72fccbb7d2ee1543db222620d7447fffebc50
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ParameterGroup5E32DECB:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: Supabase parameter group for aurora-postgresql14
      Family: aurora-postgresql14
      Parameters:
        rds.logical_replication: "1"
    Metadata:
      aws:cdk:path: Supabase/ParameterGroup/Resource
  DBSubnets7B70DA43:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for DB database
      SubnetIds:
        - Ref: VPCPrivateSubnet1Subnet8BCA10E0
        - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
        - Ref: VPCPrivateSubnet3Subnet3EDCD457
    Metadata:
      aws:cdk:path: Supabase/DB/Subnets/Default
  DBSecurityGroup302CDD63:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/DB/SecurityGroup/Resource
  DBSecurityGroupfromSupabaseDBInitFunctionSecurityGroup7C072925IndirectPort81E3E887:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseDBInitFunctionSecurityGroup7C072925:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DBSecurityGroup302CDD63
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - DBInitFunctionSecurityGroup040C3895
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
    Metadata:
      aws:cdk:path: Supabase/DB/SecurityGroup/from SupabaseDBInitFunctionSecurityGroup7C072925:{IndirectPort}
  DBSecurityGroupfromSupabaseAuthSvcSecurityGroup8C977DBBIndirectPortF44DB99D:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseAuthSvcSecurityGroup8C977DBB:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DBSecurityGroup302CDD63
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AuthSvcSecurityGroup71415F29
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
    Metadata:
      aws:cdk:path: Supabase/DB/SecurityGroup/from SupabaseAuthSvcSecurityGroup8C977DBB:{IndirectPort}
  DBSecurityGroupfromSupabaseRestSvcSecurityGroupF996F0F0IndirectPort163649AC:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseRestSvcSecurityGroupF996F0F0:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DBSecurityGroup302CDD63
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RestSvcSecurityGroup4F37982C
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
    Metadata:
      aws:cdk:path: Supabase/DB/SecurityGroup/from SupabaseRestSvcSecurityGroupF996F0F0:{IndirectPort}
  DBSecurityGroupfromSupabaseRealtimeSvcSecurityGroupA1943D6CIndirectPortC13F012D:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseRealtimeSvcSecurityGroupA1943D6C:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DBSecurityGroup302CDD63
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - RealtimeSvcSecurityGroup15A1991B
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
    Metadata:
      aws:cdk:path: Supabase/DB/SecurityGroup/from SupabaseRealtimeSvcSecurityGroupA1943D6C:{IndirectPort}
  DBSecurityGroupfromSupabaseStorageSvcSecurityGroupABCAF6CBIndirectPort73A25A05:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseStorageSvcSecurityGroupABCAF6CB:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DBSecurityGroup302CDD63
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - StorageSvcSecurityGroup134E6883
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
    Metadata:
      aws:cdk:path: Supabase/DB/SecurityGroup/from SupabaseStorageSvcSecurityGroupABCAF6CB:{IndirectPort}
  DBSecurityGroupfromSupabaseMetaSvcSecurityGroup7C723FC7IndirectPortE4831EED:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseMetaSvcSecurityGroup7C723FC7:{IndirectPort}
      FromPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
      GroupId:
        Fn::GetAtt:
          - DBSecurityGroup302CDD63
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - MetaSvcSecurityGroup28D90BB4
          - GroupId
      ToPort:
        Fn::GetAtt:
          - DB4924F778
          - Endpoint.Port
    Metadata:
      aws:cdk:path: Supabase/DB/SecurityGroup/from SupabaseMetaSvcSecurityGroup7C723FC7:{IndirectPort}
  DBSecretB8D1B379:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description:
        Fn::Join:
          - ""
          - - "Generated by the CDK for stack: "
            - Ref: AWS::StackName
      GenerateSecretString:
        ExcludeCharacters: " %+~`#$&*()|[]{}:;<>?!'/@\"\\"
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"postgres"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/DB/Secret/Resource
  DBSecretAttachment1CF7DE47:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: DBSecretB8D1B379
      TargetId:
        Ref: DB4924F778
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: Supabase/DB/Secret/Attachment/Resource
  DB4924F778:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      CopyTagsToSnapshot: true
      DatabaseName: postgres
      DBClusterParameterGroupName:
        Ref: ParameterGroup5E32DECB
      DBSubnetGroupName:
        Ref: DBSubnets7B70DA43
      EngineVersion: "14.3"
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBSecretB8D1B379
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DBSecretB8D1B379
            - :SecretString:password::}}
      Port: 5432
      StorageEncrypted: true
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - DBSecurityGroup302CDD63
            - GroupId
    UpdateReplacePolicy: Snapshot
    DeletionPolicy: Snapshot
    Metadata:
      aws:cdk:path: Supabase/DB/Resource
  DBInstance17EB9EC72:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.t4g.medium
      DBClusterIdentifier:
        Ref: DB4924F778
      DBSubnetGroupName:
        Ref: DBSubnets7B70DA43
      Engine: aurora-postgresql
      EngineVersion: "14.3"
    DependsOn:
      - VPCPrivateSubnet1DefaultRouteAE1D6490
      - VPCPrivateSubnet2DefaultRouteF4F5CFD2
      - VPCPrivateSubnet3DefaultRoute27F311AE
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/DB/Instance1
  DBService90DA777C:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 60
            Type: CNAME
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: WEIGHTED
      Name: db
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/DB/Service/Resource
  DBServiceAurora15751868:
    Type: AWS::ServiceDiscovery::Instance
    Properties:
      InstanceAttributes:
        AWS_INSTANCE_CNAME:
          Fn::GetAtt:
            - DB4924F778
            - Endpoint.Address
      ServiceId:
        Fn::GetAtt:
          - DBService90DA777C
          - Id
      InstanceId: SupabaseDBServiceAuroraE5579F48
    Metadata:
      aws:cdk:path: Supabase/DB/Service/Aurora/Resource
  DBUrlGeneratorFunctionServiceRole1A36EAC8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/DB/UrlGeneratorFunction/ServiceRole/Resource
  DBUrlGeneratorFunctionServiceRoleDefaultPolicyA52CC778:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
        Version: "2012-10-17"
      PolicyName: DBUrlGeneratorFunctionServiceRoleDefaultPolicyA52CC778
      Roles:
        - Ref: DBUrlGeneratorFunctionServiceRole1A36EAC8
    Metadata:
      aws:cdk:path: Supabase/DB/UrlGeneratorFunction/ServiceRole/DefaultPolicy/Resource
  DBUrlGeneratorFunctionFCD48DEF:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: 6a6b2e42578465278e9e467f02c4aa6c0c1f2e251eec738bbc49957c69f49d89.zip
      Role:
        Fn::GetAtt:
          - DBUrlGeneratorFunctionServiceRole1A36EAC8
          - Arn
      Description: Supabase - Database URL generator function
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - DBUrlGeneratorFunctionServiceRoleDefaultPolicyA52CC778
      - DBUrlGeneratorFunctionServiceRole1A36EAC8
    Metadata:
      aws:cdk:path: Supabase/DB/UrlGeneratorFunction/Resource
      aws:asset:path: asset.6a6b2e42578465278e9e467f02c4aa6c0c1f2e251eec738bbc49957c69f49d89
      aws:asset:is-bundled: true
      aws:asset:property: Code
  DBUrlProviderframeworkonEventServiceRole0BB99795:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/DB/UrlProvider/framework-onEvent/ServiceRole/Resource
  DBUrlProviderframeworkonEventServiceRoleDefaultPolicy69C0CE7E:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DBUrlGeneratorFunctionFCD48DEF
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DBUrlGeneratorFunctionFCD48DEF
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: DBUrlProviderframeworkonEventServiceRoleDefaultPolicy69C0CE7E
      Roles:
        - Ref: DBUrlProviderframeworkonEventServiceRole0BB99795
    Metadata:
      aws:cdk:path: Supabase/DB/UrlProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  DBUrlProviderframeworkonEvent083A4FCA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - DBUrlProviderframeworkonEventServiceRole0BB99795
          - Arn
      Description: AWS CDK resource provider framework - onEvent (Supabase/DB/UrlProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - DBUrlGeneratorFunctionFCD48DEF
              - Arn
      Handler: framework.onEvent
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - DBUrlProviderframeworkonEventServiceRoleDefaultPolicy69C0CE7E
      - DBUrlProviderframeworkonEventServiceRole0BB99795
    Metadata:
      aws:cdk:path: Supabase/DB/UrlProvider/framework-onEvent/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DBURLF56CE3E5:
    Type: Custom::SupabaseDatabaseUrl
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - DBUrlProviderframeworkonEvent083A4FCA
          - Arn
      SecretId:
        Ref: DBSecretAttachment1CF7DE47
      Hostname: db.supabase.local
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/DB/URL/Default
  DBInitFunctionServiceRole0DD3B954:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
    Metadata:
      aws:cdk:path: Supabase/DB/InitFunction/ServiceRole/Resource
  DBInitFunctionServiceRoleDefaultPolicy68AC8C37:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
        Version: "2012-10-17"
      PolicyName: DBInitFunctionServiceRoleDefaultPolicy68AC8C37
      Roles:
        - Ref: DBInitFunctionServiceRole0DD3B954
    Metadata:
      aws:cdk:path: Supabase/DB/InitFunction/ServiceRole/DefaultPolicy/Resource
  DBInitFunctionSecurityGroup040C3895:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatic security group for Lambda Function SupabaseDBInitFunctionB2A11AD0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/DB/InitFunction/SecurityGroup/Resource
  DBInitFunctionDFB79729:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: be7e267f8222c81cbaf4fae111fb1a83629da064558fcc481290fc653f4561ea.zip
      Role:
        Fn::GetAtt:
          - DBInitFunctionServiceRole0DD3B954
          - Arn
      Description: Supabase - Database init function
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs16.x
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - Fn::GetAtt:
              - DBInitFunctionSecurityGroup040C3895
              - GroupId
        SubnetIds:
          - Ref: VPCPrivateSubnet1Subnet8BCA10E0
          - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
          - Ref: VPCPrivateSubnet3Subnet3EDCD457
    DependsOn:
      - DBInitFunctionServiceRoleDefaultPolicy68AC8C37
      - DBInitFunctionServiceRole0DD3B954
    Metadata:
      aws:cdk:path: Supabase/DB/InitFunction/Resource
      aws:asset:path: asset.be7e267f8222c81cbaf4fae111fb1a83629da064558fcc481290fc653f4561ea
      aws:asset:is-bundled: true
      aws:asset:property: Code
  DBInitProviderframeworkonEventServiceRole0A865FA6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/DB/InitProvider/framework-onEvent/ServiceRole/Resource
  DBInitProviderframeworkonEventServiceRoleDefaultPolicy40DF7B7A:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - DBInitFunctionDFB79729
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - DBInitFunctionDFB79729
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: DBInitProviderframeworkonEventServiceRoleDefaultPolicy40DF7B7A
      Roles:
        - Ref: DBInitProviderframeworkonEventServiceRole0A865FA6
    Metadata:
      aws:cdk:path: Supabase/DB/InitProvider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  DBInitProviderframeworkonEvent24F1BF69:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - DBInitProviderframeworkonEventServiceRole0A865FA6
          - Arn
      Description: AWS CDK resource provider framework - onEvent (Supabase/DB/InitProvider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - DBInitFunctionDFB79729
              - Arn
      Handler: framework.onEvent
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - DBInitProviderframeworkonEventServiceRoleDefaultPolicy40DF7B7A
      - DBInitProviderframeworkonEventServiceRole0A865FA6
    Metadata:
      aws:cdk:path: Supabase/DB/InitProvider/framework-onEvent/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DBInitC726DE70:
    Type: Custom::SupabaseDatabaseInit
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - DBInitProviderframeworkonEvent24F1BF69
          - Arn
      SecretId:
        Ref: DBSecretAttachment1CF7DE47
      Version: "4"
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/DB/Init/Default
  DBVirtualNode473618FF:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Listeners:
          - PortMapping:
              Port:
                Fn::GetAtt:
                  - DB4924F778
                  - Endpoint.Port
              Protocol: tcp
        ServiceDiscovery:
          DNS:
            Hostname:
              Fn::GetAtt:
                - DB4924F778
                - Endpoint.Address
            ResponseType: ENDPOINTS
      VirtualNodeName: SupabaseDBVirtualNode357795A1
    Metadata:
      aws:cdk:path: Supabase/DB/VirtualNode/Resource
  DBVirtualService39A7C323:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - DBVirtualNode473618FF
                - VirtualNodeName
      VirtualServiceName: db.spabase.local
    Metadata:
      aws:cdk:path: Supabase/DB/VirtualService/Resource
  SupabaseJwtSecret4CEDF760:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: Supabase - Json Web Token Secret
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: jwt_secret
        PasswordLength: 64
        SecretStringTemplate: '{"jwt_secret":"your-super-secret-jwt-token-with-at-least-32-characters-long"}'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/Resource
  SupabaseJwtSecretGeneratorFunctionServiceRole1EA27662:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/GeneratorFunction/ServiceRole/Resource
  SupabaseJwtSecretGeneratorFunctionServiceRoleDefaultPolicyF7D37D62:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - secretsmanager:PutSecretValue
              - secretsmanager:UpdateSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
        Version: "2012-10-17"
      PolicyName: SupabaseJwtSecretGeneratorFunctionServiceRoleDefaultPolicyF7D37D62
      Roles:
        - Ref: SupabaseJwtSecretGeneratorFunctionServiceRole1EA27662
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/GeneratorFunction/ServiceRole/DefaultPolicy/Resource
  SupabaseJwtSecretGeneratorFunctionAA45459F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: 09c98a199f76e2d3d59a05f9ce174e8b8ba0fac707e02649d7cb9947a43990f0.zip
      Role:
        Fn::GetAtt:
          - SupabaseJwtSecretGeneratorFunctionServiceRole1EA27662
          - Arn
      Description: Supabase - JWT Generator
      Environment:
        Variables:
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: "1"
      Handler: index.handler
      Runtime: nodejs16.x
    DependsOn:
      - SupabaseJwtSecretGeneratorFunctionServiceRoleDefaultPolicyF7D37D62
      - SupabaseJwtSecretGeneratorFunctionServiceRole1EA27662
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/GeneratorFunction/Resource
      aws:asset:path: asset.09c98a199f76e2d3d59a05f9ce174e8b8ba0fac707e02649d7cb9947a43990f0
      aws:asset:is-bundled: true
      aws:asset:property: Code
  SupabaseJwtSecretProviderframeworkonEventServiceRoleE0B51369:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/Provider/framework-onEvent/ServiceRole/Resource
  SupabaseJwtSecretProviderframeworkonEventServiceRoleDefaultPolicyD320F8A5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: lambda:InvokeFunction
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - SupabaseJwtSecretGeneratorFunctionAA45459F
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - SupabaseJwtSecretGeneratorFunctionAA45459F
                        - Arn
                    - :*
        Version: "2012-10-17"
      PolicyName: SupabaseJwtSecretProviderframeworkonEventServiceRoleDefaultPolicyD320F8A5
      Roles:
        - Ref: SupabaseJwtSecretProviderframeworkonEventServiceRoleE0B51369
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/Provider/framework-onEvent/ServiceRole/DefaultPolicy/Resource
  SupabaseJwtSecretProviderframeworkonEvent9D39B51B:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-983035974902-us-west-2
        S3Key: e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85.zip
      Role:
        Fn::GetAtt:
          - SupabaseJwtSecretProviderframeworkonEventServiceRoleE0B51369
          - Arn
      Description: AWS CDK resource provider framework - onEvent (Supabase/SupabaseJwtSecret/Provider)
      Environment:
        Variables:
          USER_ON_EVENT_FUNCTION_ARN:
            Fn::GetAtt:
              - SupabaseJwtSecretGeneratorFunctionAA45459F
              - Arn
      Handler: framework.onEvent
      Runtime: nodejs14.x
      Timeout: 900
    DependsOn:
      - SupabaseJwtSecretProviderframeworkonEventServiceRoleDefaultPolicyD320F8A5
      - SupabaseJwtSecretProviderframeworkonEventServiceRoleE0B51369
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/Provider/framework-onEvent/Resource
      aws:asset:path: asset.e7c95e1a12d903d913ebdd526c735f1ac58b2024882a5562110221fe685ebe85
      aws:asset:is-bundled: false
      aws:asset:property: Code
  SupabaseJwtSecretJWTC70DB0F1:
    Type: Custom::SupabaseJWT
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - SupabaseJwtSecretProviderframeworkonEvent9D39B51B
          - Arn
      SecretId:
        Ref: SupabaseJwtSecret4CEDF760
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: Supabase/SupabaseJwtSecret/JWT/Default
  KongTaskDefinitionTaskRole59341FD6:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: Supabase/Kong/TaskDefinition/TaskRole/Resource
  KongTaskDefinitionAE44544D:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - DependsOn:
            - Condition: HEALTHY
              ContainerName: envoy
          Environment:
            - Name: KONG_DNS_ORDER
              Value: LAST,A,CNAME
            - Name: KONG_PLUGINS
              Value: request-transformer,cors,key-auth,acl
          Essential: true
          HealthCheck:
            Command:
              - CMD
              - kong
              - health
            Interval: 10
            Retries: 3
            Timeout: 10
          Image:
            Fn::Sub: 983035974902.dkr.ecr.us-west-2.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-983035974902-us-west-2:4caf2cf98bd2ac54cac51cde120019576b434c9a3f41e40bc5cc4fb286c3314d
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: KongTaskDefinitionappLogGroup2AEC822E
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          Name: app
          PortMappings:
            - ContainerPort: 8000
              Protocol: tcp
          Secrets:
            - Name: ANON_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":anon_key::"
            - Name: SERVICE_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":service_role_key::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
        - Cpu: 80
          Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/
                    - Fn::GetAtt:
                        - KongVirtualNodeFABCC391
                        - VirtualNodeName
            - Name: ENABLE_ENVOY_XRAY_TRACING
              Value: "1"
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.22.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: KongTaskDefinitionenvoyLogGroupD501650D
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 128
          Name: envoy
          User: "1337"
        - Cpu: 16
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: KongTaskDefinitionxraydaemonLogGroup98B1A9FF
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 64
          Name: xray-daemon
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - KongTaskDefinitionExecutionRole2593435E
          - Arn
      Family: SupabaseKongTaskDefinitionDEF6E72D
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: IgnoredUID
            Value: "1337"
          - Name: IgnoredGID
            Value: "1338"
          - Name: AppPorts
            Value: "8000"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - KongTaskDefinitionTaskRole59341FD6
          - Arn
    Metadata:
      aws:cdk:path: Supabase/Kong/TaskDefinition/Resource
  KongTaskDefinitionappLogGroup2AEC822E:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Kong/TaskDefinition/app/LogGroup/Resource
  KongTaskDefinitionExecutionRole2593435E:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/Kong/TaskDefinition/ExecutionRole/Resource
  KongTaskDefinitionExecutionRoleDefaultPolicyF6446340:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Effect: Allow
            Resource:
              Fn::Join:
                - ""
                - - "arn:"
                  - Ref: AWS::Partition
                  - :ecr:us-west-2:983035974902:repository/cdk-hnb659fds-container-assets-983035974902-us-west-2
          - Action: ecr:GetAuthorizationToken
            Effect: Allow
            Resource: "*"
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - KongTaskDefinitionappLogGroup2AEC822E
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - KongTaskDefinitionenvoyLogGroupD501650D
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - KongTaskDefinitionxraydaemonLogGroup98B1A9FF
                - Arn
        Version: "2012-10-17"
      PolicyName: KongTaskDefinitionExecutionRoleDefaultPolicyF6446340
      Roles:
        - Ref: KongTaskDefinitionExecutionRole2593435E
    Metadata:
      aws:cdk:path: Supabase/Kong/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  KongTaskDefinitionenvoyLogGroupD501650D:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Kong/TaskDefinition/envoy/LogGroup/Resource
  KongTaskDefinitionxraydaemonLogGroup98B1A9FF:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Kong/TaskDefinition/xray-daemon/LogGroup/Resource
  KongSvcLBD22BD9AD:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      Subnets:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
        - Ref: VPCPublicSubnet3Subnet631C5E25
      Type: network
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
      - VPCPublicSubnet3DefaultRouteA0D29D46
    Metadata:
      aws:cdk:path: Supabase/Kong/Svc/LB/Resource
  KongSvcLBPublicListener5B640FAA:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: KongSvcLBPublicListenerECSGroup64A6B988
          Type: forward
      LoadBalancerArn:
        Ref: KongSvcLBD22BD9AD
      Port: 80
      Protocol: TCP
    Metadata:
      aws:cdk:path: Supabase/Kong/Svc/LB/PublicListener/Resource
  KongSvcLBPublicListenerECSGroup64A6B988:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      Port: 80
      Protocol: TCP
      TargetType: ip
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Kong/Svc/LB/PublicListener/ECSGroup/Resource
  KongSvcServiceCAB2BB74:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - Base: 1
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 0
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 10
      LoadBalancers:
        - ContainerName: app
          ContainerPort: 8000
          TargetGroupArn:
            Ref: KongSvcLBPublicListenerECSGroup64A6B988
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - KongSvcServiceSecurityGroup5EF39425
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
            - Ref: VPCPrivateSubnet3Subnet3EDCD457
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - KongSvcServiceCloudmapServiceA3BF260B
              - Arn
      TaskDefinition:
        Ref: KongTaskDefinitionAE44544D
    DependsOn:
      - KongSvcLBPublicListenerECSGroup64A6B988
      - KongSvcLBPublicListener5B640FAA
    Metadata:
      aws:cdk:path: Supabase/Kong/Svc/Service/Service
  KongSvcServiceCloudmapServiceA3BF260B:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: kong
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/Kong/Svc/Service/CloudmapService/Resource
  KongSvcServiceSecurityGroup5EF39425:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Supabase/Kong/Svc/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp:
            Fn::GetAtt:
              - VPCB9E5F0B4
              - CidrBlock
          Description: NLB healthcheck
          FromPort: 8000
          IpProtocol: tcp
          ToPort: 8000
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Kong/Svc/Service/SecurityGroup/Resource
  KongSvcServiceSecurityGroupfrompl82a045eb8000E450E98F:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: CloudFront
      FromPort: 8000
      GroupId:
        Fn::GetAtt:
          - KongSvcServiceSecurityGroup5EF39425
          - GroupId
      SourcePrefixListId: pl-82a045eb
      ToPort: 8000
    Metadata:
      aws:cdk:path: Supabase/Kong/Svc/Service/SecurityGroup/from pl-82a045eb:8000
  KongVirtualNodeFABCC391:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName: auth.supabase.local
          - VirtualService:
              VirtualServiceName: rest.supabase.local
          - VirtualService:
              VirtualServiceName: realtime.supabase.local
          - VirtualService:
              VirtualServiceName: storage.supabase.local
          - VirtualService:
              VirtualServiceName: meta.supabase.local
        Listeners:
          - PortMapping:
              Port: 8000
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: supabase.local
            ServiceName:
              Fn::GetAtt:
                - KongSvcServiceCloudmapServiceA3BF260B
                - Name
      VirtualNodeName: Kong
    Metadata:
      aws:cdk:path: Supabase/Kong/VirtualNode/Resource
  KongVirtualService469BBDA1:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - KongVirtualNodeFABCC391
                - VirtualNodeName
      VirtualServiceName: kong.supabase.local
    Metadata:
      aws:cdk:path: Supabase/Kong/VirtualService/Resource
  CDN2330F4C0:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.css"
            TargetOriginId: SupabaseCDNOrigin10381EFD3
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.png"
            TargetOriginId: SupabaseCDNOrigin10381EFD3
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.svg"
            TargetOriginId: SupabaseCDNOrigin10381EFD3
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.woff"
            TargetOriginId: SupabaseCDNOrigin10381EFD3
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.woff2"
            TargetOriginId: SupabaseCDNOrigin10381EFD3
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.js"
            TargetOriginId: SupabaseCDNOrigin10381EFD3
            ViewerProtocolPolicy: redirect-to-https
        Comment: Supabase - CDN
        CustomErrorResponses:
          - ErrorCachingMinTTL: 10
            ErrorCode: 400
          - ErrorCachingMinTTL: 10
            ErrorCode: 500
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          Compress: true
          OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
          TargetOriginId: SupabaseCDNOrigin10381EFD3
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::GetAtt:
                - KongSvcLBD22BD9AD
                - DNSName
            Id: SupabaseCDNOrigin10381EFD3
    Metadata:
      aws:cdk:path: Supabase/CDN/Resource
  AuthTaskDefinitionTaskRole0174181B:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: Supabase/Auth/TaskDefinition/TaskRole/Resource
  AuthTaskDefinitionDBEE261E:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - DependsOn:
            - Condition: HEALTHY
              ContainerName: envoy
          Environment:
            - Name: GOTRUE_API_HOST
              Value: 0.0.0.0
            - Name: GOTRUE_API_PORT
              Value: "9999"
            - Name: API_EXTERNAL_URL
              Value:
                Fn::Join:
                  - ""
                  - - https://
                    - Fn::GetAtt:
                        - CDN2330F4C0
                        - DomainName
            - Name: GOTRUE_DB_DRIVER
              Value: postgres
            - Name: GOTRUE_SITE_URL
              Value:
                Fn::Join:
                  - ""
                  - - http://
                    - Fn::GetAtt:
                        - KongSvcLBD22BD9AD
                        - DNSName
            - Name: GOTRUE_URI_ALLOW_LIST
              Value: ""
            - Name: GOTRUE_DISABLE_SIGNUP
              Value: "false"
            - Name: GOTRUE_JWT_ADMIN_ROLES
              Value: service_role
            - Name: GOTRUE_JWT_AUD
              Value: authenticated
            - Name: GOTRUE_JWT_DEFAULT_GROUP_NAME
              Value: authenticated
            - Name: GOTRUE_JWT_EXP
              Value: "3600"
            - Name: GOTRUE_EXTERNAL_EMAIL_ENABLED
              Value: "true"
            - Name: GOTRUE_MAILER_AUTOCONFIRM
              Value: "false"
            - Name: GOTRUE_SMTP_ADMIN_EMAIL
              Value: admin@example.com
            - Name: GOTRUE_SMTP_HOST
              Value: mail
            - Name: GOTRUE_SMTP_PORT
              Value: "2500"
            - Name: GOTRUE_SMTP_USER
              Value: fake_mail_user
            - Name: GOTRUE_SMTP_PASS
              Value: fake_mail_password
            - Name: GOTRUE_SMTP_SENDER_NAME
              Value: fake_sender
            - Name: GOTRUE_MAILER_URLPATHS_INVITE
              Value: /auth/v1/verify
            - Name: GOTRUE_MAILER_URLPATHS_CONFIRMATION
              Value: /auth/v1/verify
            - Name: GOTRUE_MAILER_URLPATHS_RECOVERY
              Value: /auth/v1/verify
            - Name: GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE
              Value: /auth/v1/verify
            - Name: GOTRUE_EXTERNAL_PHONE_ENABLED
              Value: "true"
            - Name: GOTRUE_SMS_AUTOCONFIRM
              Value: "true"
          Essential: true
          Image: supabase/gotrue:v2.9.2
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AuthTaskDefinitionappLogGroup30C81075
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          Name: app
          PortMappings:
            - ContainerPort: 9999
              Protocol: tcp
          Secrets:
            - Name: GOTRUE_DB_DATABASE_URL
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":url_auth::"
            - Name: GOTRUE_JWT_SECRET
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":jwt_secret::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
        - Cpu: 80
          Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/
                    - Fn::GetAtt:
                        - AuthVirtualNode4480F984
                        - VirtualNodeName
            - Name: ENABLE_ENVOY_XRAY_TRACING
              Value: "1"
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.22.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AuthTaskDefinitionenvoyLogGroup220A606F
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 128
          Name: envoy
          User: "1337"
        - Cpu: 16
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: AuthTaskDefinitionxraydaemonLogGroupEA589E9E
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 64
          Name: xray-daemon
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - AuthTaskDefinitionExecutionRole8B68B008
          - Arn
      Family: SupabaseAuthTaskDefinition474F8608
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: IgnoredUID
            Value: "1337"
          - Name: IgnoredGID
            Value: "1338"
          - Name: AppPorts
            Value: "9999"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - AuthTaskDefinitionTaskRole0174181B
          - Arn
    Metadata:
      aws:cdk:path: Supabase/Auth/TaskDefinition/Resource
  AuthTaskDefinitionappLogGroup30C81075:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Auth/TaskDefinition/app/LogGroup/Resource
  AuthTaskDefinitionExecutionRole8B68B008:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/Auth/TaskDefinition/ExecutionRole/Resource
  AuthTaskDefinitionExecutionRoleDefaultPolicy2A4B4627:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AuthTaskDefinitionappLogGroup30C81075
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AuthTaskDefinitionenvoyLogGroup220A606F
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - AuthTaskDefinitionxraydaemonLogGroupEA589E9E
                - Arn
        Version: "2012-10-17"
      PolicyName: AuthTaskDefinitionExecutionRoleDefaultPolicy2A4B4627
      Roles:
        - Ref: AuthTaskDefinitionExecutionRole8B68B008
    Metadata:
      aws:cdk:path: Supabase/Auth/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  AuthTaskDefinitionenvoyLogGroup220A606F:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Auth/TaskDefinition/envoy/LogGroup/Resource
  AuthTaskDefinitionxraydaemonLogGroupEA589E9E:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Auth/TaskDefinition/xray-daemon/LogGroup/Resource
  AuthSvcServiceDAF53F1D:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - Base: 1
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 0
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - AuthSvcSecurityGroup71415F29
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
            - Ref: VPCPrivateSubnet3Subnet3EDCD457
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - AuthSvcCloudmapService85C22E54
              - Arn
      TaskDefinition:
        Ref: AuthTaskDefinitionDBEE261E
    Metadata:
      aws:cdk:path: Supabase/Auth/Svc/Service
  AuthSvcCloudmapService85C22E54:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: auth
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/Auth/Svc/CloudmapService/Resource
  AuthSvcSecurityGroup71415F29:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Supabase/Auth/Svc/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Auth/Svc/SecurityGroup/Resource
  AuthSvcSecurityGroupfromSupabaseKongSvcServiceSecurityGroupB2E2075399996E058886:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseKongSvcServiceSecurityGroupB2E20753:9999
      FromPort: 9999
      GroupId:
        Fn::GetAtt:
          - AuthSvcSecurityGroup71415F29
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KongSvcServiceSecurityGroup5EF39425
          - GroupId
      ToPort: 9999
    Metadata:
      aws:cdk:path: Supabase/Auth/Svc/SecurityGroup/from SupabaseKongSvcServiceSecurityGroupB2E20753:9999
  AuthVirtualNode4480F984:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName: rest.supabase.local
          - VirtualService:
              VirtualServiceName: db.spabase.local
        Listeners:
          - PortMapping:
              Port: 9999
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: supabase.local
            ServiceName:
              Fn::GetAtt:
                - AuthSvcCloudmapService85C22E54
                - Name
      VirtualNodeName: Auth
    Metadata:
      aws:cdk:path: Supabase/Auth/VirtualNode/Resource
  AuthVirtualService6B0561FE:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - AuthVirtualNode4480F984
                - VirtualNodeName
      VirtualServiceName: auth.supabase.local
    Metadata:
      aws:cdk:path: Supabase/Auth/VirtualService/Resource
  RestTaskDefinitionTaskRole94551FBF:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: Supabase/Rest/TaskDefinition/TaskRole/Resource
  RestTaskDefinition4EBA60E9:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - DependsOn:
            - Condition: HEALTHY
              ContainerName: envoy
          Environment:
            - Name: PGRST_DB_SCHEMAS
              Value: public,storage,graphql_public
            - Name: PGRST_DB_ANON_ROLE
              Value: anon
            - Name: PGRST_DB_USE_LEGACY_GUCS
              Value: "false"
          Essential: true
          Image: postgrest/postgrest:v9.0.1
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RestTaskDefinitionappLogGroup1B252B42
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          Name: app
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          Secrets:
            - Name: PGRST_DB_URI
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":url::"
            - Name: PGRST_JWT_SECRET
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":jwt_secret::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
        - Cpu: 80
          Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/
                    - Fn::GetAtt:
                        - RestVirtualNode2FA1B1DF
                        - VirtualNodeName
            - Name: ENABLE_ENVOY_XRAY_TRACING
              Value: "1"
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.22.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RestTaskDefinitionenvoyLogGroup8364AFDA
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 128
          Name: envoy
          User: "1337"
        - Cpu: 16
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RestTaskDefinitionxraydaemonLogGroupB7C2922E
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 64
          Name: xray-daemon
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - RestTaskDefinitionExecutionRole3F0CBE29
          - Arn
      Family: SupabaseRestTaskDefinitionDA0C2E15
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: IgnoredUID
            Value: "1337"
          - Name: IgnoredGID
            Value: "1338"
          - Name: AppPorts
            Value: "3000"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - RestTaskDefinitionTaskRole94551FBF
          - Arn
    Metadata:
      aws:cdk:path: Supabase/Rest/TaskDefinition/Resource
  RestTaskDefinitionappLogGroup1B252B42:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Rest/TaskDefinition/app/LogGroup/Resource
  RestTaskDefinitionExecutionRole3F0CBE29:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/Rest/TaskDefinition/ExecutionRole/Resource
  RestTaskDefinitionExecutionRoleDefaultPolicyB130F5B5:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RestTaskDefinitionappLogGroup1B252B42
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RestTaskDefinitionenvoyLogGroup8364AFDA
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RestTaskDefinitionxraydaemonLogGroupB7C2922E
                - Arn
        Version: "2012-10-17"
      PolicyName: RestTaskDefinitionExecutionRoleDefaultPolicyB130F5B5
      Roles:
        - Ref: RestTaskDefinitionExecutionRole3F0CBE29
    Metadata:
      aws:cdk:path: Supabase/Rest/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  RestTaskDefinitionenvoyLogGroup8364AFDA:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Rest/TaskDefinition/envoy/LogGroup/Resource
  RestTaskDefinitionxraydaemonLogGroupB7C2922E:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Rest/TaskDefinition/xray-daemon/LogGroup/Resource
  RestSvcServiceCEB7F559:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - Base: 1
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 0
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - RestSvcSecurityGroup4F37982C
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
            - Ref: VPCPrivateSubnet3Subnet3EDCD457
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - RestSvcCloudmapServiceC2707820
              - Arn
      TaskDefinition:
        Ref: RestTaskDefinition4EBA60E9
    Metadata:
      aws:cdk:path: Supabase/Rest/Svc/Service
  RestSvcCloudmapServiceC2707820:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: rest
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/Rest/Svc/CloudmapService/Resource
  RestSvcSecurityGroup4F37982C:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Supabase/Rest/Svc/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Rest/Svc/SecurityGroup/Resource
  RestSvcSecurityGroupfromSupabaseKongSvcServiceSecurityGroupB2E207533000CCD17FBF:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseKongSvcServiceSecurityGroupB2E20753:3000
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - RestSvcSecurityGroup4F37982C
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KongSvcServiceSecurityGroup5EF39425
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: Supabase/Rest/Svc/SecurityGroup/from SupabaseKongSvcServiceSecurityGroupB2E20753:3000
  RestSvcSecurityGroupfromSupabaseAuthSvcSecurityGroup8C977DBB30000EB88406:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseAuthSvcSecurityGroup8C977DBB:3000
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - RestSvcSecurityGroup4F37982C
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - AuthSvcSecurityGroup71415F29
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: Supabase/Rest/Svc/SecurityGroup/from SupabaseAuthSvcSecurityGroup8C977DBB:3000
  RestSvcSecurityGroupfromSupabaseStorageSvcSecurityGroupABCAF6CB300098661113:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseStorageSvcSecurityGroupABCAF6CB:3000
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - RestSvcSecurityGroup4F37982C
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - StorageSvcSecurityGroup134E6883
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: Supabase/Rest/Svc/SecurityGroup/from SupabaseStorageSvcSecurityGroupABCAF6CB:3000
  RestVirtualNode2FA1B1DF:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName: db.spabase.local
        Listeners:
          - PortMapping:
              Port: 3000
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: supabase.local
            ServiceName:
              Fn::GetAtt:
                - RestSvcCloudmapServiceC2707820
                - Name
      VirtualNodeName: Rest
    Metadata:
      aws:cdk:path: Supabase/Rest/VirtualNode/Resource
  RestVirtualService75A9862D:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - RestVirtualNode2FA1B1DF
                - VirtualNodeName
      VirtualServiceName: rest.supabase.local
    Metadata:
      aws:cdk:path: Supabase/Rest/VirtualService/Resource
  RealtimeTaskDefinitionTaskRole8324A2B1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: Supabase/Realtime/TaskDefinition/TaskRole/Resource
  RealtimeTaskDefinition52361C2C:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Command:
            - bash
            - -c
            - ./prod/rel/realtime/bin/realtime eval Realtime.Release.migrate && ./prod/rel/realtime/bin/realtime start
          DependsOn:
            - Condition: HEALTHY
              ContainerName: envoy
          Environment:
            - Name: DB_SSL
              Value: "false"
            - Name: PORT
              Value: "4000"
            - Name: REPLICATION_MODE
              Value: RLS
            - Name: REPLICATION_POLL_INTERVAL
              Value: "100"
            - Name: SECURE_CHANNELS
              Value: "true"
            - Name: SLOT_NAME
              Value: supabase_realtime_rls
            - Name: TEMPORARY_SLOT
              Value: "true"
          Essential: true
          Image: supabase/realtime:v0.22.7
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RealtimeTaskDefinitionappLogGroup60EE6415
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          Name: app
          PortMappings:
            - ContainerPort: 4000
              Protocol: tcp
          Secrets:
            - Name: JWT_SECRET
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":jwt_secret::"
            - Name: DB_HOST
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":host::"
            - Name: DB_PORT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":port::"
            - Name: DB_NAME
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":dbname::"
            - Name: DB_USER
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":username::"
            - Name: DB_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":password::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
        - Cpu: 80
          Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/
                    - Fn::GetAtt:
                        - RealtimeVirtualNode58346FCC
                        - VirtualNodeName
            - Name: ENABLE_ENVOY_XRAY_TRACING
              Value: "1"
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.22.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RealtimeTaskDefinitionenvoyLogGroup7AE18490
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 128
          Name: envoy
          User: "1337"
        - Cpu: 16
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: RealtimeTaskDefinitionxraydaemonLogGroup46723FF1
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 64
          Name: xray-daemon
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - RealtimeTaskDefinitionExecutionRoleCD260B29
          - Arn
      Family: SupabaseRealtimeTaskDefinition9B533F0B
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: IgnoredUID
            Value: "1337"
          - Name: IgnoredGID
            Value: "1338"
          - Name: AppPorts
            Value: "4000"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - RealtimeTaskDefinitionTaskRole8324A2B1
          - Arn
    Metadata:
      aws:cdk:path: Supabase/Realtime/TaskDefinition/Resource
  RealtimeTaskDefinitionappLogGroup60EE6415:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Realtime/TaskDefinition/app/LogGroup/Resource
  RealtimeTaskDefinitionExecutionRoleCD260B29:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/Realtime/TaskDefinition/ExecutionRole/Resource
  RealtimeTaskDefinitionExecutionRoleDefaultPolicyBD7C355B:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RealtimeTaskDefinitionappLogGroup60EE6415
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RealtimeTaskDefinitionenvoyLogGroup7AE18490
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - RealtimeTaskDefinitionxraydaemonLogGroup46723FF1
                - Arn
        Version: "2012-10-17"
      PolicyName: RealtimeTaskDefinitionExecutionRoleDefaultPolicyBD7C355B
      Roles:
        - Ref: RealtimeTaskDefinitionExecutionRoleCD260B29
    Metadata:
      aws:cdk:path: Supabase/Realtime/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  RealtimeTaskDefinitionenvoyLogGroup7AE18490:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Realtime/TaskDefinition/envoy/LogGroup/Resource
  RealtimeTaskDefinitionxraydaemonLogGroup46723FF1:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Realtime/TaskDefinition/xray-daemon/LogGroup/Resource
  RealtimeSvcService05F54057:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - Base: 1
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 0
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - RealtimeSvcSecurityGroup15A1991B
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
            - Ref: VPCPrivateSubnet3Subnet3EDCD457
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - RealtimeSvcCloudmapServiceF8CD5DF6
              - Arn
      TaskDefinition:
        Ref: RealtimeTaskDefinition52361C2C
    Metadata:
      aws:cdk:path: Supabase/Realtime/Svc/Service
  RealtimeSvcCloudmapServiceF8CD5DF6:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: realtime
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/Realtime/Svc/CloudmapService/Resource
  RealtimeSvcSecurityGroup15A1991B:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Supabase/Realtime/Svc/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Realtime/Svc/SecurityGroup/Resource
  RealtimeSvcSecurityGroupfromSupabaseKongSvcServiceSecurityGroupB2E2075340007351B545:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseKongSvcServiceSecurityGroupB2E20753:4000
      FromPort: 4000
      GroupId:
        Fn::GetAtt:
          - RealtimeSvcSecurityGroup15A1991B
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KongSvcServiceSecurityGroup5EF39425
          - GroupId
      ToPort: 4000
    Metadata:
      aws:cdk:path: Supabase/Realtime/Svc/SecurityGroup/from SupabaseKongSvcServiceSecurityGroupB2E20753:4000
  RealtimeVirtualNode58346FCC:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName: db.spabase.local
        Listeners:
          - PortMapping:
              Port: 4000
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: supabase.local
            ServiceName:
              Fn::GetAtt:
                - RealtimeSvcCloudmapServiceF8CD5DF6
                - Name
      VirtualNodeName: Realtime
    Metadata:
      aws:cdk:path: Supabase/Realtime/VirtualNode/Resource
  RealtimeVirtualService596BFBD0:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - RealtimeVirtualNode58346FCC
                - VirtualNodeName
      VirtualServiceName: realtime.supabase.local
    Metadata:
      aws:cdk:path: Supabase/Realtime/VirtualService/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Bucket/Resource
  StorageTaskDefinitionTaskRole24C4C137:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/TaskRole/Resource
  StorageTaskDefinitionTaskRoleDefaultPolicy3448147D:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject
              - s3:PutObjectLegalHold
              - s3:PutObjectRetention
              - s3:PutObjectTagging
              - s3:PutObjectVersionTagging
              - s3:Abort*
            Effect: Allow
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ""
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: "2012-10-17"
      PolicyName: StorageTaskDefinitionTaskRoleDefaultPolicy3448147D
      Roles:
        - Ref: StorageTaskDefinitionTaskRole24C4C137
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/TaskRole/DefaultPolicy/Resource
  StorageTaskDefinition6B21D26E:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - DependsOn:
            - Condition: HEALTHY
              ContainerName: envoy
          Environment:
            - Name: POSTGREST_URL
              Value: http://rest.supabase.local:3000
            - Name: PGOPTIONS
              Value: -c search_path=storage,public
            - Name: FILE_SIZE_LIMIT
              Value: "52428800"
            - Name: STORAGE_BACKEND
              Value: s3
            - Name: FILE_STORAGE_BACKEND_PATH
              Value: ./data
            - Name: TENANT_ID
              Value: stub
            - Name: REGION
              Value: us-west-2
            - Name: GLOBAL_S3_BUCKET
              Value:
                Ref: Bucket83908E77
          Essential: true
          Image: supabase/storage-api:v0.18.6
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: StorageTaskDefinitionappLogGroupDFD4685A
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          Name: app
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Secrets:
            - Name: ANON_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":anon_key::"
            - Name: SERVICE_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":service_role_key::"
            - Name: PGRST_JWT_SECRET
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":jwt_secret::"
            - Name: DATABASE_URL
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":url::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
        - Cpu: 80
          Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/
                    - Fn::GetAtt:
                        - StorageVirtualNodeB19919D7
                        - VirtualNodeName
            - Name: ENABLE_ENVOY_XRAY_TRACING
              Value: "1"
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.22.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: StorageTaskDefinitionenvoyLogGroupDEA4EB92
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 128
          Name: envoy
          User: "1337"
        - Cpu: 16
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: StorageTaskDefinitionxraydaemonLogGroupFF6266CC
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 64
          Name: xray-daemon
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - StorageTaskDefinitionExecutionRoleAEB5CF80
          - Arn
      Family: SupabaseStorageTaskDefinition0123FC26
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: IgnoredUID
            Value: "1337"
          - Name: IgnoredGID
            Value: "1338"
          - Name: AppPorts
            Value: "8080"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - StorageTaskDefinitionTaskRole24C4C137
          - Arn
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/Resource
  StorageTaskDefinitionappLogGroupDFD4685A:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/app/LogGroup/Resource
  StorageTaskDefinitionExecutionRoleAEB5CF80:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/ExecutionRole/Resource
  StorageTaskDefinitionExecutionRoleDefaultPolicy537D0826:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - StorageTaskDefinitionappLogGroupDFD4685A
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - StorageTaskDefinitionenvoyLogGroupDEA4EB92
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - StorageTaskDefinitionxraydaemonLogGroupFF6266CC
                - Arn
        Version: "2012-10-17"
      PolicyName: StorageTaskDefinitionExecutionRoleDefaultPolicy537D0826
      Roles:
        - Ref: StorageTaskDefinitionExecutionRoleAEB5CF80
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  StorageTaskDefinitionenvoyLogGroupDEA4EB92:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/envoy/LogGroup/Resource
  StorageTaskDefinitionxraydaemonLogGroupFF6266CC:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Storage/TaskDefinition/xray-daemon/LogGroup/Resource
  StorageSvcServiceA4DA327A:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - Base: 1
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 0
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - StorageSvcSecurityGroup134E6883
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
            - Ref: VPCPrivateSubnet3Subnet3EDCD457
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - StorageSvcCloudmapServiceEC9FA74C
              - Arn
      TaskDefinition:
        Ref: StorageTaskDefinition6B21D26E
    Metadata:
      aws:cdk:path: Supabase/Storage/Svc/Service
  StorageSvcCloudmapServiceEC9FA74C:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: storage
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/Storage/Svc/CloudmapService/Resource
  StorageSvcSecurityGroup134E6883:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Supabase/Storage/Svc/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Storage/Svc/SecurityGroup/Resource
  StorageSvcSecurityGroupfromSupabaseKongSvcServiceSecurityGroupB2E207538080E2FF01D0:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseKongSvcServiceSecurityGroupB2E20753:8080
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - StorageSvcSecurityGroup134E6883
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KongSvcServiceSecurityGroup5EF39425
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: Supabase/Storage/Svc/SecurityGroup/from SupabaseKongSvcServiceSecurityGroupB2E20753:8080
  StorageVirtualNodeB19919D7:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName: rest.supabase.local
          - VirtualService:
              VirtualServiceName: db.spabase.local
        Listeners:
          - PortMapping:
              Port: 8080
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: supabase.local
            ServiceName:
              Fn::GetAtt:
                - StorageSvcCloudmapServiceEC9FA74C
                - Name
      VirtualNodeName: Storage
    Metadata:
      aws:cdk:path: Supabase/Storage/VirtualNode/Resource
  StorageVirtualServiceD9A2FDB1:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - StorageVirtualNodeB19919D7
                - VirtualNodeName
      VirtualServiceName: storage.supabase.local
    Metadata:
      aws:cdk:path: Supabase/Storage/VirtualService/Resource
  MetaTaskDefinitionTaskRole18CD498C:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: Supabase/Meta/TaskDefinition/TaskRole/Resource
  MetaTaskDefinition286A1512:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - DependsOn:
            - Condition: HEALTHY
              ContainerName: envoy
          Environment:
            - Name: PG_META_PORT
              Value: "8080"
          Essential: true
          Image: supabase/postgres-meta:v0.41.0
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: MetaTaskDefinitionappLogGroup5C408D57
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          Name: app
          PortMappings:
            - ContainerPort: 8080
              Protocol: tcp
          Secrets:
            - Name: PG_META_DB_HOST
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":host::"
            - Name: PG_META_DB_PORT
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":port::"
            - Name: PG_META_DB_NAME
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":dbname::"
            - Name: PG_META_DB_USER
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":username::"
            - Name: PG_META_DB_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":password::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
        - Cpu: 80
          Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/
                    - Fn::GetAtt:
                        - MetaVirtualNode03248F16
                        - VirtualNodeName
            - Name: ENABLE_ENVOY_XRAY_TRACING
              Value: "1"
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.22.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: MetaTaskDefinitionenvoyLogGroup7E55EAEB
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 128
          Name: envoy
          User: "1337"
        - Cpu: 16
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: MetaTaskDefinitionxraydaemonLogGroupAD84E3BE
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 64
          Name: xray-daemon
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - MetaTaskDefinitionExecutionRole93D83399
          - Arn
      Family: SupabaseMetaTaskDefinition428DEBA5
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: IgnoredUID
            Value: "1337"
          - Name: IgnoredGID
            Value: "1338"
          - Name: AppPorts
            Value: "8080"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - MetaTaskDefinitionTaskRole18CD498C
          - Arn
    Metadata:
      aws:cdk:path: Supabase/Meta/TaskDefinition/Resource
  MetaTaskDefinitionappLogGroup5C408D57:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Meta/TaskDefinition/app/LogGroup/Resource
  MetaTaskDefinitionExecutionRole93D83399:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/Meta/TaskDefinition/ExecutionRole/Resource
  MetaTaskDefinitionExecutionRoleDefaultPolicy5A6F1F9C:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MetaTaskDefinitionappLogGroup5C408D57
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MetaTaskDefinitionenvoyLogGroup7E55EAEB
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - MetaTaskDefinitionxraydaemonLogGroupAD84E3BE
                - Arn
        Version: "2012-10-17"
      PolicyName: MetaTaskDefinitionExecutionRoleDefaultPolicy5A6F1F9C
      Roles:
        - Ref: MetaTaskDefinitionExecutionRole93D83399
    Metadata:
      aws:cdk:path: Supabase/Meta/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  MetaTaskDefinitionenvoyLogGroup7E55EAEB:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Meta/TaskDefinition/envoy/LogGroup/Resource
  MetaTaskDefinitionxraydaemonLogGroupAD84E3BE:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Meta/TaskDefinition/xray-daemon/LogGroup/Resource
  MetaSvcService58BFAF30:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - Base: 1
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 0
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - MetaSvcSecurityGroup28D90BB4
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
            - Ref: VPCPrivateSubnet3Subnet3EDCD457
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - MetaSvcCloudmapService5BBAEB97
              - Arn
      TaskDefinition:
        Ref: MetaTaskDefinition286A1512
    Metadata:
      aws:cdk:path: Supabase/Meta/Svc/Service
  MetaSvcCloudmapService5BBAEB97:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: meta
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/Meta/Svc/CloudmapService/Resource
  MetaSvcSecurityGroup28D90BB4:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Supabase/Meta/Svc/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Meta/Svc/SecurityGroup/Resource
  MetaSvcSecurityGroupfromSupabaseKongSvcServiceSecurityGroupB2E20753808061AEF4C9:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseKongSvcServiceSecurityGroupB2E20753:8080
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - MetaSvcSecurityGroup28D90BB4
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - KongSvcServiceSecurityGroup5EF39425
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: Supabase/Meta/Svc/SecurityGroup/from SupabaseKongSvcServiceSecurityGroupB2E20753:8080
  MetaSvcSecurityGroupfromSupabaseStudioSvcServiceSecurityGroupD00B7C978080BB5C6F0F:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: from SupabaseStudioSvcServiceSecurityGroupD00B7C97:8080
      FromPort: 8080
      GroupId:
        Fn::GetAtt:
          - MetaSvcSecurityGroup28D90BB4
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - StudioSvcServiceSecurityGroupEF26159E
          - GroupId
      ToPort: 8080
    Metadata:
      aws:cdk:path: Supabase/Meta/Svc/SecurityGroup/from SupabaseStudioSvcServiceSecurityGroupD00B7C97:8080
  MetaVirtualNode03248F16:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName: db.spabase.local
        Listeners:
          - PortMapping:
              Port: 8080
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: supabase.local
            ServiceName:
              Fn::GetAtt:
                - MetaSvcCloudmapService5BBAEB97
                - Name
      VirtualNodeName: Meta
    Metadata:
      aws:cdk:path: Supabase/Meta/VirtualNode/Resource
  MetaVirtualServiceD8836994:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - MetaVirtualNode03248F16
                - VirtualNodeName
      VirtualServiceName: meta.supabase.local
    Metadata:
      aws:cdk:path: Supabase/Meta/VirtualService/Resource
  StudioTaskDefinitionTaskRole4FE9D685:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSAppMeshEnvoyAccess
        - arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess
    Metadata:
      aws:cdk:path: Supabase/Studio/TaskDefinition/TaskRole/Resource
  StudioTaskDefinitionFEEA269A:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - DependsOn:
            - Condition: HEALTHY
              ContainerName: envoy
          Environment:
            - Name: STUDIO_PG_META_URL
              Value: http://meta.supabase.local:8080
            - Name: SUPABASE_URL
              Value:
                Fn::Join:
                  - ""
                  - - https://
                    - Fn::GetAtt:
                        - CDN2330F4C0
                        - DomainName
            - Name: SUPABASE_REST_URL
              Value:
                Fn::Join:
                  - ""
                  - - https://
                    - Fn::GetAtt:
                        - CDN2330F4C0
                        - DomainName
                    - /rest/v1/
          Essential: true
          Image: supabase/studio:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: StudioTaskDefinitionappLogGroupD6A01F3C
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          Name: app
          PortMappings:
            - ContainerPort: 3000
              Protocol: tcp
          Secrets:
            - Name: POSTGRES_PASSWORD
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: DBSecretAttachment1CF7DE47
                    - ":password::"
            - Name: SUPABASE_ANON_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":anon_key::"
            - Name: SUPABASE_SERVICE_KEY
              ValueFrom:
                Fn::Join:
                  - ""
                  - - Ref: SupabaseJwtSecret4CEDF760
                    - ":service_role_key::"
          Ulimits:
            - HardLimit: 65536
              Name: nofile
              SoftLimit: 65536
        - Cpu: 80
          Environment:
            - Name: APPMESH_VIRTUAL_NODE_NAME
              Value:
                Fn::Join:
                  - ""
                  - - mesh/
                    - Fn::GetAtt:
                        - Mesh73A573F6
                        - MeshName
                    - /virtualNode/
                    - Fn::GetAtt:
                        - StudioVirtualNode46AA78DE
                        - VirtualNodeName
            - Name: ENABLE_ENVOY_XRAY_TRACING
              Value: "1"
          Essential: true
          HealthCheck:
            Command:
              - CMD-SHELL
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
            Interval: 5
            Retries: 3
            StartPeriod: 10
            Timeout: 2
          Image: public.ecr.aws/appmesh/aws-appmesh-envoy:v1.22.2.0-prod
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: StudioTaskDefinitionenvoyLogGroupBF83B5F7
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 128
          Name: envoy
          User: "1337"
        - Cpu: 16
          Essential: true
          Image: public.ecr.aws/xray/aws-xray-daemon:latest
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Ref: StudioTaskDefinitionxraydaemonLogGroup95EDBB55
              awslogs-stream-prefix: ecs
              awslogs-region: us-west-2
          MemoryReservation: 64
          Name: xray-daemon
      Cpu: "256"
      ExecutionRoleArn:
        Fn::GetAtt:
          - StudioTaskDefinitionExecutionRoleBBC69CFE
          - Arn
      Family: SupabaseStudioTaskDefinition2986B664
      Memory: "512"
      NetworkMode: awsvpc
      ProxyConfiguration:
        ContainerName: envoy
        ProxyConfigurationProperties:
          - Name: IgnoredUID
            Value: "1337"
          - Name: IgnoredGID
            Value: "1338"
          - Name: AppPorts
            Value: "3000"
          - Name: ProxyIngressPort
            Value: "15000"
          - Name: ProxyEgressPort
            Value: "15001"
          - Name: EgressIgnoredIPs
            Value: 169.254.170.2,169.254.169.254
        Type: APPMESH
      RequiresCompatibilities:
        - FARGATE
      RuntimePlatform:
        CpuArchitecture: ARM64
      TaskRoleArn:
        Fn::GetAtt:
          - StudioTaskDefinitionTaskRole4FE9D685
          - Arn
    Metadata:
      aws:cdk:path: Supabase/Studio/TaskDefinition/Resource
  StudioTaskDefinitionappLogGroupD6A01F3C:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Studio/TaskDefinition/app/LogGroup/Resource
  StudioTaskDefinitionExecutionRoleBBC69CFE:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: "2012-10-17"
    Metadata:
      aws:cdk:path: Supabase/Studio/TaskDefinition/ExecutionRole/Resource
  StudioTaskDefinitionExecutionRoleDefaultPolicy1DF00583:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - StudioTaskDefinitionappLogGroupD6A01F3C
                - Arn
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: DBSecretAttachment1CF7DE47
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: SupabaseJwtSecret4CEDF760
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - StudioTaskDefinitionenvoyLogGroupBF83B5F7
                - Arn
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource:
              Fn::GetAtt:
                - StudioTaskDefinitionxraydaemonLogGroup95EDBB55
                - Arn
        Version: "2012-10-17"
      PolicyName: StudioTaskDefinitionExecutionRoleDefaultPolicy1DF00583
      Roles:
        - Ref: StudioTaskDefinitionExecutionRoleBBC69CFE
    Metadata:
      aws:cdk:path: Supabase/Studio/TaskDefinition/ExecutionRole/DefaultPolicy/Resource
  StudioTaskDefinitionenvoyLogGroupBF83B5F7:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Studio/TaskDefinition/envoy/LogGroup/Resource
  StudioTaskDefinitionxraydaemonLogGroup95EDBB55:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: Supabase/Studio/TaskDefinition/xray-daemon/LogGroup/Resource
  StudioSvcLBC1B49D6D:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: "false"
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - StudioSvcLBSecurityGroup7B90B4C7
            - GroupId
      Subnets:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
        - Ref: VPCPublicSubnet3Subnet631C5E25
      Type: application
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
      - VPCPublicSubnet3DefaultRouteA0D29D46
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/LB/Resource
  StudioSvcLBSecurityGroup7B90B4C7:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB SupabaseStudioSvcLB6A97D7A9
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/LB/SecurityGroup/Resource
  StudioSvcLBSecurityGrouptoSupabaseStudioSvcServiceSecurityGroupD00B7C9730004588C616:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - StudioSvcLBSecurityGroup7B90B4C7
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - StudioSvcServiceSecurityGroupEF26159E
          - GroupId
      FromPort: 3000
      ToPort: 3000
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/LB/SecurityGroup/to SupabaseStudioSvcServiceSecurityGroupD00B7C97:3000
  StudioSvcLBPublicListener4C14E701:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: StudioSvcLBPublicListenerECSGroup48C5F9E8
          Type: forward
      LoadBalancerArn:
        Ref: StudioSvcLBC1B49D6D
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/LB/PublicListener/Resource
  StudioSvcLBPublicListenerECSGroup48C5F9E8:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      Port: 80
      Protocol: HTTP
      TargetGroupAttributes:
        - Key: stickiness.enabled
          Value: "false"
      TargetType: ip
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/LB/PublicListener/ECSGroup/Resource
  StudioSvcService8A78A16D:
    Type: AWS::ECS::Service
    Properties:
      CapacityProviderStrategy:
        - Base: 1
          CapacityProvider: FARGATE
          Weight: 1
        - Base: 0
          CapacityProvider: FARGATE_SPOT
          Weight: 0
      Cluster:
        Ref: ClusterEB0386A7
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
        MaximumPercent: 200
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 10
      LoadBalancers:
        - ContainerName: app
          ContainerPort: 3000
          TargetGroupArn:
            Ref: StudioSvcLBPublicListenerECSGroup48C5F9E8
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::GetAtt:
                - StudioSvcServiceSecurityGroupEF26159E
                - GroupId
          Subnets:
            - Ref: VPCPrivateSubnet1Subnet8BCA10E0
            - Ref: VPCPrivateSubnet2SubnetCFCDAA7A
            - Ref: VPCPrivateSubnet3Subnet3EDCD457
      ServiceRegistries:
        - RegistryArn:
            Fn::GetAtt:
              - StudioSvcServiceCloudmapServiceFC9B208A
              - Arn
      TaskDefinition:
        Ref: StudioTaskDefinitionFEEA269A
    DependsOn:
      - StudioSvcLBPublicListenerECSGroup48C5F9E8
      - StudioSvcLBPublicListener4C14E701
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/Service/Service
  StudioSvcServiceCloudmapServiceFC9B208A:
    Type: AWS::ServiceDiscovery::Service
    Properties:
      DnsConfig:
        DnsRecords:
          - TTL: 10
            Type: A
        NamespaceId:
          Fn::GetAtt:
            - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
            - Id
        RoutingPolicy: MULTIVALUE
      HealthCheckCustomConfig:
        FailureThreshold: 1
      Name: studio
      NamespaceId:
        Fn::GetAtt:
          - ClusterDefaultServiceDiscoveryNamespaceC336F9B4
          - Id
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/Service/CloudmapService/Resource
  StudioSvcServiceSecurityGroupEF26159E:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Supabase/Studio/Svc/Service/SecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/Service/SecurityGroup/Resource
  StudioSvcServiceSecurityGroupfromSupabaseStudioSvcLBSecurityGroup6D675C62300091FB5F6E:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 3000
      GroupId:
        Fn::GetAtt:
          - StudioSvcServiceSecurityGroupEF26159E
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - StudioSvcLBSecurityGroup7B90B4C7
          - GroupId
      ToPort: 3000
    Metadata:
      aws:cdk:path: Supabase/Studio/Svc/Service/SecurityGroup/from SupabaseStudioSvcLBSecurityGroup6D675C62:3000
  StudioVirtualNode46AA78DE:
    Type: AWS::AppMesh::VirtualNode
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Backends:
          - VirtualService:
              VirtualServiceName: meta.supabase.local
        Listeners:
          - PortMapping:
              Port: 3000
              Protocol: http
        Logging:
          AccessLog:
            File:
              Path: /dev/stdout
        ServiceDiscovery:
          AWSCloudMap:
            NamespaceName: supabase.local
            ServiceName:
              Fn::GetAtt:
                - StudioSvcServiceCloudmapServiceFC9B208A
                - Name
      VirtualNodeName: Studio
    Metadata:
      aws:cdk:path: Supabase/Studio/VirtualNode/Resource
  StudioVirtualService81E3869F:
    Type: AWS::AppMesh::VirtualService
    Properties:
      MeshName:
        Fn::GetAtt:
          - Mesh73A573F6
          - MeshName
      Spec:
        Provider:
          VirtualNode:
            VirtualNodeName:
              Fn::GetAtt:
                - StudioVirtualNode46AA78DE
                - VirtualNodeName
      VirtualServiceName: studio.supabase.local
    Metadata:
      aws:cdk:path: Supabase/Studio/VirtualService/Resource
  StudioCDN8AB0BD38:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.css"
            TargetOriginId: SupabaseStudioCDNOrigin1F28BF52C
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.png"
            TargetOriginId: SupabaseStudioCDNOrigin1F28BF52C
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.svg"
            TargetOriginId: SupabaseStudioCDNOrigin1F28BF52C
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.woff"
            TargetOriginId: SupabaseStudioCDNOrigin1F28BF52C
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.woff2"
            TargetOriginId: SupabaseStudioCDNOrigin1F28BF52C
            ViewerProtocolPolicy: redirect-to-https
          - AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            Compress: true
            OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
            PathPattern: "*.js"
            TargetOriginId: SupabaseStudioCDNOrigin1F28BF52C
            ViewerProtocolPolicy: redirect-to-https
        Comment: Supabase - StudioCDN
        CustomErrorResponses:
          - ErrorCachingMinTTL: 10
            ErrorCode: 400
          - ErrorCachingMinTTL: 10
            ErrorCode: 500
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          Compress: true
          OriginRequestPolicyId: 216adef6-5c7f-47e4-b989-5492eafa07d3
          TargetOriginId: SupabaseStudioCDNOrigin1F28BF52C
          ViewerProtocolPolicy: redirect-to-https
        Enabled: true
        HttpVersion: http2
        IPV6Enabled: true
        Origins:
          - CustomOriginConfig:
              OriginProtocolPolicy: http-only
              OriginSSLProtocols:
                - TLSv1.2
            DomainName:
              Fn::GetAtt:
                - StudioSvcLBC1B49D6D
                - DNSName
            Id: SupabaseStudioCDNOrigin1F28BF52C
    Metadata:
      aws:cdk:path: Supabase/StudioCDN/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Analytics: v2:deflate64:H4sIAAAAAAAA/31UyW7bMBD9lt4ZtknQ3r0kgYHUFewgV2NE0QpjiRS42DAE/XuHpCgzTtqL5s3C4ZuFuqP39/THNziZG1YdbhpR0n5rgR0ImnY9Z3e0f+0YWezla7EghSsbwbaulNx62wVtlLP8BcqGX+wX28wYxQRYoeQU7MHDqvBiDfYJLD/BmRRaHBFeEq+k5RpxCohMRm1mketby6UlW86cFvb8pJXrAof/Glay1tyYT/aHYB4IdF3LzRvtf+PXRwX5KrR10KxVFejn6oi3XB8Fy72jZSCcGdovGmewIO//DBfQAUMmhVZHUXGdtc2QR9A1+H6aw5LvhRSpm9cWJS0IyXVmG89m5CZWJoJKGKaOXJ9pP45gKc0asAdIKZz4yvw5IVlI9K6ksSCjI2F/FdPcmhYk1FzjogV9HIFHUbwgWW6z0U4B156BNNCWFewkTuDd0HUQj06yULWAlvYbFVcyyELh+oYdigg53e/AGGRFZ16gTvu5Ywdu52A4idAfiCjdiIPcy+miCWyFrBtu1eQaiK5w6gVo7ApOeFrG5Xyc+ZVrCRZKvDktR3wI2bHckIIvjZzSRuXSe4xIhS4VVqJXLQ4h1ow+uuGdMsIqfQ51N6pG2s+qnm5OOOzxrgPrnyXGrLk9KX14VlDNofGXVVfbNus67HXY4n9HYdoGjBWswZAyhGAvj3dfXaAjn0xPMQJLl6M/4dEXd2cqJ1e/Jqg/2FO2zJalGAjydtVe49uj/RKDtShdeqC5Pgxkw41y2jfGdx//tjVWShiOTbU7PTr90ox/ATI7mUXwppNDWOiU5qPPu/442zncVf8s6Lv5frz9RW9/0ttv70aIG+2kFS2nmyj/AnocBGEDBgAA
    Metadata:
      aws:cdk:path: Supabase/CDKMetadata/Default
Outputs:
  KongSvcLoadBalancerDNS7AB8D78E:
    Value:
      Fn::GetAtt:
        - KongSvcLBD22BD9AD
        - DNSName
  StudioSvcLoadBalancerDNS4F23D7E8:
    Value:
      Fn::GetAtt:
        - StudioSvcLBC1B49D6D
        - DNSName
  StudioSvcServiceURLF12C5377:
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - StudioSvcLBC1B49D6D
              - DNSName
  StudioUrl:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Fn::GetAtt:
              - StudioCDN8AB0BD38
              - DomainName
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - "1"
                  - "2"
                  - "3"
                  - "4"
                  - "5"
                - Ref: BootstrapVersion
        AssertDescription: CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.

