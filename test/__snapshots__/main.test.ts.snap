// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Conditions": Object {
    "AuthProvider1Enabled983DA6B5": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "AuthProvider1Name740DD3F6",
            },
            "",
          ],
        },
      ],
    },
    "AuthProvider2Enabled05B8862B": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "AuthProvider2Name573986E5",
            },
            "",
          ],
        },
      ],
    },
    "AuthProvider3Enabled464D1673": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "AuthProvider3NameA8A7785F",
            },
            "",
          ],
        },
      ],
    },
    "AuthServiceDisabledB6209B31": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "AuthMinTaskCount998F20C4",
        },
        "0",
      ],
    },
    "CdnManagedWafEnabledD3A8F9B9": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "CdnWebAclArn5923748A",
        },
        "",
      ],
    },
    "DatabaseInstance10Enabled6673066F": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance11EnabledB1C5CBAB",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            10,
          ],
        },
      ],
    },
    "DatabaseInstance11EnabledB1C5CBAB": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance12EnabledF3886774",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            11,
          ],
        },
      ],
    },
    "DatabaseInstance12EnabledF3886774": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance13Enabled3DB2AD18",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            12,
          ],
        },
      ],
    },
    "DatabaseInstance13Enabled3DB2AD18": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance14Enabled80809892",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            13,
          ],
        },
      ],
    },
    "DatabaseInstance14Enabled80809892": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance15EnabledDC9D31BD",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            14,
          ],
        },
      ],
    },
    "DatabaseInstance15EnabledDC9D31BD": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance16Enabled2CE0876E",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            15,
          ],
        },
      ],
    },
    "DatabaseInstance16Enabled2CE0876E": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DatabaseInstanceCount7E7C28F9",
        },
        16,
      ],
    },
    "DatabaseInstance1EnabledA506D432": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance2Enabled9CE137EB",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            1,
          ],
        },
      ],
    },
    "DatabaseInstance2Enabled9CE137EB": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance3Enabled44A32710",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            2,
          ],
        },
      ],
    },
    "DatabaseInstance3Enabled44A32710": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance4Enabled3E6E6545",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            3,
          ],
        },
      ],
    },
    "DatabaseInstance4Enabled3E6E6545": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance5Enabled6A6E91B8",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            4,
          ],
        },
      ],
    },
    "DatabaseInstance5Enabled6A6E91B8": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance6EnabledF0D02CB8",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            5,
          ],
        },
      ],
    },
    "DatabaseInstance6EnabledF0D02CB8": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance7Enabled1F2EE1B3",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            6,
          ],
        },
      ],
    },
    "DatabaseInstance7Enabled1F2EE1B3": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance8Enabled22381EB2",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            7,
          ],
        },
      ],
    },
    "DatabaseInstance8Enabled22381EB2": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance9Enabled9C35143A",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            8,
          ],
        },
      ],
    },
    "DatabaseInstance9Enabled9C35143A": Object {
      "Fn::Or": Array [
        Object {
          "Condition": "DatabaseInstance10Enabled6673066F",
        },
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "DatabaseInstanceCount7E7C28F9",
            },
            9,
          ],
        },
      ],
    },
    "GraphQLServiceDisabled2040BDFB": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "GraphQLMinTaskCount0807D92D",
        },
        "0",
      ],
    },
    "KongServiceDisabled5CB631B8": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "KongMinTaskCount4451EF4C",
        },
        "0",
      ],
    },
    "MetaServiceDisabled3B808F33": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "MetaMinTaskCountEA12F444",
        },
        "0",
      ],
    },
    "RealtimeServiceDisabledD3DB8A99": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "RealtimeMinTaskCount306F67E8",
        },
        "0",
      ],
    },
    "RestServiceDisabled280508EE": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "RestMinTaskCount073959EA",
        },
        "0",
      ],
    },
    "StorageServiceDisabled05C15E2C": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "StorageMinTaskCount07E65703",
        },
        "0",
      ],
    },
    "StudioHttpsEnabledFB7951B2": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "StudioAcmCertArn2D10C4B8",
            },
            "",
          ],
        },
      ],
    },
    "WorkMailEnabled": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "EnableWorkMail",
        },
        "true",
      ],
    },
  },
  "Description": "Self-hosted Supabase",
  "Mappings": Object {
    "ServiceprincipalMap": Object {
      "af-south-1": Object {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": Object {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": Object {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": Object {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": Object {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": Object {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-southeast-1": Object {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": Object {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": Object {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": Object {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": Object {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": Object {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": Object {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-north-1": Object {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": Object {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": Object {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": Object {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": Object {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": Object {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-south-1": Object {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": Object {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": Object {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": Object {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": Object {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": Object {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": Object {
        "states": "states.amazonaws.com",
      },
      "us-west-1": Object {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": Object {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
    "TaskSize": Object {
      "2xlarge": Object {
        "cpu": 8192,
        "memory": 16384,
      },
      "4xlarge": Object {
        "cpu": 16384,
        "memory": 32768,
      },
      "large": Object {
        "cpu": 2048,
        "memory": 4096,
      },
      "medium": Object {
        "cpu": 1024,
        "memory": 2048,
      },
      "micro": Object {
        "cpu": 256,
        "memory": 1024,
      },
      "nano": Object {
        "cpu": 256,
        "memory": 512,
      },
      "small": Object {
        "cpu": 512,
        "memory": 1024,
      },
      "xlarge": Object {
        "cpu": 4096,
        "memory": 8192,
      },
    },
  },
  "Metadata": Object {
    "AWS::CloudFormation::Interface": Object {
      "ParameterGroups": Array [
        Object {
          "Label": Object {
            "default": "Supabase - Auth Settings",
          },
          "Parameters": Array [
            "DisableSignup",
            "SiteUrl",
            "RedirectUrls",
            "JwtExpiryLimit",
            "PasswordMinLength",
          ],
        },
        Object {
          "Label": Object {
            "default": "Supabase - Auth E-mail Settings",
          },
          "Parameters": Array [
            "SenderEmail",
            "SenderName",
            "SesRegion",
            "EnableWorkMail",
          ],
        },
        Object {
          "Label": Object {
            "default": "Supabase - API Versions",
          },
          "Parameters": Array [
            "AuthApiVersion",
            "RestApiVersion",
            "RealtimeApiVersion",
            "StorageApiVersion",
            "PostgresMetaApiVersion",
            "StudioVersion",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - Database",
          },
          "Parameters": Array [
            "DatabaseInstanceClass6CA66E68",
            "DatabaseInstanceCount7E7C28F9",
            "DatabaseMinCapacity82563E98",
            "DatabaseMaxCapacityDD9828CB",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - Security",
          },
          "Parameters": Array [
            "CdnWebAclArn5923748A",
            "StudioAcmCertArn2D10C4B8",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - Kong (API Gateway)",
          },
          "Parameters": Array [
            "KongTaskSize93C195E9",
            "KongMinTaskCount4451EF4C",
            "KongMaxTaskCountA4145D65",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - Auth API (GoTrue)",
          },
          "Parameters": Array [
            "AuthTaskSize9895C206",
            "AuthMinTaskCount998F20C4",
            "AuthMaxTaskCount9E585BDA",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - RESTful API (PostgREST)",
          },
          "Parameters": Array [
            "RestTaskSize14E11A14",
            "RestMinTaskCount073959EA",
            "RestMaxTaskCount1D2E84B9",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - GraphQL API (PostGraphile)",
          },
          "Parameters": Array [
            "GraphQLTaskSize228AD0D2",
            "GraphQLMinTaskCount0807D92D",
            "GraphQLMaxTaskCount62412A02",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - Realtime API",
          },
          "Parameters": Array [
            "RealtimeTaskSize6077FE1F",
            "RealtimeMinTaskCount306F67E8",
            "RealtimeMaxTaskCountE72E1120",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - Storage API",
          },
          "Parameters": Array [
            "StorageTaskSizeB82D9CFB",
            "StorageMinTaskCount07E65703",
            "StorageMaxTaskCount372C6914",
          ],
        },
        Object {
          "Label": Object {
            "default": "Infrastructure Settings - Postgres Meta API",
          },
          "Parameters": Array [
            "MetaTaskSize556D36D9",
            "MetaMinTaskCountEA12F444",
            "MetaMaxTaskCount2749DE86",
          ],
        },
        Object {
          "Label": Object {
            "default": "External Auth Provider 1",
          },
          "Parameters": Array [
            "AuthProvider1Name740DD3F6",
            "AuthProvider1ClientId5614D178",
            "AuthProvider1SecretAE54364F",
          ],
        },
        Object {
          "Label": Object {
            "default": "External Auth Provider 2",
          },
          "Parameters": Array [
            "AuthProvider2Name573986E5",
            "AuthProvider2ClientIdF3685A2B",
            "AuthProvider2Secret2662F55E",
          ],
        },
        Object {
          "Label": Object {
            "default": "External Auth Provider 3",
          },
          "Parameters": Array [
            "AuthProvider3NameA8A7785F",
            "AuthProvider3ClientId8DF3C6F7",
            "AuthProvider3Secret29364F33",
          ],
        },
      ],
      "ParameterLabels": Object {
        "AuthApiVersion": Object {
          "default": "Auth API Version - GoTrue",
        },
        "AuthMaxTaskCount9E585BDA": Object {
          "default": "Maximum Fargate Task Count",
        },
        "AuthMinTaskCount998F20C4": Object {
          "default": "Minimum Fargate Task Count",
        },
        "AuthProvider1ClientId5614D178": Object {
          "default": "Client ID",
        },
        "AuthProvider1Name740DD3F6": Object {
          "default": "Provider Name",
        },
        "AuthProvider1SecretAE54364F": Object {
          "default": "Client Secret",
        },
        "AuthProvider2ClientIdF3685A2B": Object {
          "default": "Client ID",
        },
        "AuthProvider2Name573986E5": Object {
          "default": "Provider Name",
        },
        "AuthProvider2Secret2662F55E": Object {
          "default": "Client Secret",
        },
        "AuthProvider3ClientId8DF3C6F7": Object {
          "default": "Client ID",
        },
        "AuthProvider3NameA8A7785F": Object {
          "default": "Provider Name",
        },
        "AuthProvider3Secret29364F33": Object {
          "default": "Client Secret",
        },
        "AuthTaskSize9895C206": Object {
          "default": "Fargate Task Size",
        },
        "CdnWebAclArn5923748A": Object {
          "default": "Web ACL ARN (AWS WAF)",
        },
        "DatabaseInstanceClass6CA66E68": Object {
          "default": "DB Instance Class",
        },
        "DatabaseInstanceCount7E7C28F9": Object {
          "default": "DB Instance Count",
        },
        "DatabaseMaxCapacityDD9828CB": Object {
          "default": "Maximum ACUs",
        },
        "DatabaseMinCapacity82563E98": Object {
          "default": "Minimum ACUs",
        },
        "DisableSignup": Object {
          "default": "Disable User Signups",
        },
        "EnableWorkMail": Object {
          "default": "Enable Amazon WorkMail (Test E-mail Domain)",
        },
        "GraphQLMaxTaskCount62412A02": Object {
          "default": "Maximum Fargate Task Count",
        },
        "GraphQLMinTaskCount0807D92D": Object {
          "default": "Minimum Fargate Task Count",
        },
        "GraphQLTaskSize228AD0D2": Object {
          "default": "Fargate Task Size",
        },
        "JwtExpiryLimit": Object {
          "default": "JWT expiry limit",
        },
        "KongMaxTaskCountA4145D65": Object {
          "default": "Maximum Fargate Task Count",
        },
        "KongMinTaskCount4451EF4C": Object {
          "default": "Minimum Fargate Task Count",
        },
        "KongTaskSize93C195E9": Object {
          "default": "Fargate Task Size",
        },
        "MetaMaxTaskCount2749DE86": Object {
          "default": "Maximum Fargate Task Count",
        },
        "MetaMinTaskCountEA12F444": Object {
          "default": "Minimum Fargate Task Count",
        },
        "MetaTaskSize556D36D9": Object {
          "default": "Fargate Task Size",
        },
        "PasswordMinLength": Object {
          "default": "Min password length",
        },
        "PostgresMetaApiVersion": Object {
          "default": "Postgres Meta API Version",
        },
        "RealtimeApiVersion": Object {
          "default": "Realtime API Version",
        },
        "RealtimeMaxTaskCountE72E1120": Object {
          "default": "Maximum Fargate Task Count",
        },
        "RealtimeMinTaskCount306F67E8": Object {
          "default": "Minimum Fargate Task Count",
        },
        "RealtimeTaskSize6077FE1F": Object {
          "default": "Fargate Task Size",
        },
        "RedirectUrls": Object {
          "default": "Redirect URLs",
        },
        "RestApiVersion": Object {
          "default": "Rest API Version - PostgREST",
        },
        "RestMaxTaskCount1D2E84B9": Object {
          "default": "Maximum Fargate Task Count",
        },
        "RestMinTaskCount073959EA": Object {
          "default": "Minimum Fargate Task Count",
        },
        "RestTaskSize14E11A14": Object {
          "default": "Fargate Task Size",
        },
        "SenderEmail": Object {
          "default": "Sender Email Address",
        },
        "SenderName": Object {
          "default": "Sender Name",
        },
        "SesRegion": Object {
          "default": "Amazon SES Region",
        },
        "SiteUrl": Object {
          "default": "Site URL",
        },
        "StorageApiVersion": Object {
          "default": "Storage API Version",
        },
        "StorageMaxTaskCount372C6914": Object {
          "default": "Maximum Fargate Task Count",
        },
        "StorageMinTaskCount07E65703": Object {
          "default": "Minimum Fargate Task Count",
        },
        "StorageTaskSizeB82D9CFB": Object {
          "default": "Fargate Task Size",
        },
        "StudioAcmCertArn2D10C4B8": Object {
          "default": "ACM Certificate ARN - Supabase Studio",
        },
        "StudioVersion": Object {
          "default": "Supabase Studio Version",
        },
      },
    },
  },
  "Outputs": Object {
    "StudioLoadBalancerDNS804F8A6B": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "StudioLB850A0917",
          "DNSName",
        ],
      },
    },
    "StudioServiceURL4F6A7441": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "http://",
            Object {
              "Fn::GetAtt": Array [
                "StudioLB850A0917",
                "DNSName",
              ],
            },
          ],
        ],
      },
    },
    "SupabasAnonKey": Object {
      "Description": "This key is safe to use in a browser if you have enabled Row Level Security for your tables and configured policies.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "AnonKey",
            ],
          ],
        },
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "SupabaseJwtAnonRole874E82F9",
          "Token",
        ],
      },
    },
    "SupabaseUrl": Object {
      "Description": "A RESTful endpoint for querying and managing your database.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "Url",
            ],
          ],
        },
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Fn::GetAtt": Array [
                "CdnDistribution149FA6C8",
                "DomainName",
              ],
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AuthApiVersion": Object {
      "Default": "v2.23.0",
      "Description": "Docker image tag - https://gallery.ecr.aws/supabase/gotrue",
      "Type": "String",
    },
    "AuthMaxTaskCount9E585BDA": Object {
      "Default": 20,
      "Description": "Maximum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "AuthMinTaskCount998F20C4": Object {
      "Default": 1,
      "Description": "Minimum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "AuthProvider1ClientId5614D178": Object {
      "Default": "",
      "Description": "The OAuth2 Client ID registered with the external provider.",
      "Type": "String",
    },
    "AuthProvider1Name740DD3F6": Object {
      "AllowedValues": Array [
        "",
        "APPLE",
        "AZURE",
        "BITBUCKET",
        "DISCORD",
        "FACEBOOK",
        "GITHUB",
        "GITLAB",
        "GOOGLE",
        "KEYCLOAK",
        "LINKEDIN",
        "NOTION",
        "SPOTIFY",
        "SLACK",
        "TWITCH",
        "TWITTER",
        "WORKOS",
      ],
      "Default": "",
      "Description": "External Auth Provider Name",
      "Type": "String",
    },
    "AuthProvider1SecretAE54364F": Object {
      "Default": "",
      "Description": "The OAuth2 Client Secret provided by the external provider when you registered.",
      "NoEcho": true,
      "Type": "String",
    },
    "AuthProvider2ClientIdF3685A2B": Object {
      "Default": "",
      "Description": "The OAuth2 Client ID registered with the external provider.",
      "Type": "String",
    },
    "AuthProvider2Name573986E5": Object {
      "AllowedValues": Array [
        "",
        "APPLE",
        "AZURE",
        "BITBUCKET",
        "DISCORD",
        "FACEBOOK",
        "GITHUB",
        "GITLAB",
        "GOOGLE",
        "KEYCLOAK",
        "LINKEDIN",
        "NOTION",
        "SPOTIFY",
        "SLACK",
        "TWITCH",
        "TWITTER",
        "WORKOS",
      ],
      "Default": "",
      "Description": "External Auth Provider Name",
      "Type": "String",
    },
    "AuthProvider2Secret2662F55E": Object {
      "Default": "",
      "Description": "The OAuth2 Client Secret provided by the external provider when you registered.",
      "NoEcho": true,
      "Type": "String",
    },
    "AuthProvider3ClientId8DF3C6F7": Object {
      "Default": "",
      "Description": "The OAuth2 Client ID registered with the external provider.",
      "Type": "String",
    },
    "AuthProvider3NameA8A7785F": Object {
      "AllowedValues": Array [
        "",
        "APPLE",
        "AZURE",
        "BITBUCKET",
        "DISCORD",
        "FACEBOOK",
        "GITHUB",
        "GITLAB",
        "GOOGLE",
        "KEYCLOAK",
        "LINKEDIN",
        "NOTION",
        "SPOTIFY",
        "SLACK",
        "TWITCH",
        "TWITTER",
        "WORKOS",
      ],
      "Default": "",
      "Description": "External Auth Provider Name",
      "Type": "String",
    },
    "AuthProvider3Secret29364F33": Object {
      "Default": "",
      "Description": "The OAuth2 Client Secret provided by the external provider when you registered.",
      "NoEcho": true,
      "Type": "String",
    },
    "AuthTaskSize9895C206": Object {
      "AllowedValues": Array [
        "nano",
        "micro",
        "small",
        "medium",
        "large",
        "xlarge",
        "2xlarge",
        "4xlarge",
      ],
      "Default": "nano",
      "Description": "Fargare task size",
      "Type": "String",
    },
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "CdnWebAclArn5923748A": Object {
      "AllowedPattern": "^arn:aws:wafv2:us-east-1:[0-9]{12}:global/webacl/[\\\\w-]+/[\\\\w]{8}-[\\\\w]{4}-[\\\\w]{4}-[\\\\w]{4}-[\\\\w]{12}$|",
      "Default": "",
      "Description": "Web ACL for CloudFront.",
      "Type": "String",
    },
    "DatabaseInstanceClass6CA66E68": Object {
      "AllowedValues": Array [
        "db.serverless",
        "db.t4g.medium",
        "db.t4g.large",
        "db.r6g.large",
        "db.r6g.xlarge",
        "db.r6g.2xlarge",
        "db.r6g.4xlarge",
        "db.r6g.8xlarge",
        "db.r6g.12xlarge",
        "db.r6g.16xlarge",
      ],
      "Default": "db.serverless",
      "Type": "String",
    },
    "DatabaseInstanceCount7E7C28F9": Object {
      "Default": 1,
      "MaxValue": 16,
      "MinValue": 1,
      "Type": "Number",
    },
    "DatabaseMaxCapacityDD9828CB": Object {
      "Default": 32,
      "Description": "The maximum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster.",
      "MaxValue": 128,
      "MinValue": 0.5,
      "Type": "Number",
    },
    "DatabaseMinCapacity82563E98": Object {
      "Default": 0.5,
      "Description": "The minimum number of Aurora capacity units (ACUs) for a DB instance in an Aurora Serverless v2 cluster.",
      "MaxValue": 128,
      "MinValue": 0.5,
      "Type": "Number",
    },
    "DisableSignup": Object {
      "AllowedValues": Array [
        "true",
        "false",
      ],
      "Default": "false",
      "Description": "When signup is disabled the only way to create new users is through invites. Defaults to false, all signups enabled.",
      "Type": "String",
    },
    "EnableWorkMail": Object {
      "AllowedValues": Array [
        "true",
        "false",
      ],
      "Default": "false",
      "Description": "Enable Amazon WorkMail, to use \\"xxx.awsapps.com\\" e-mail domain.",
      "Type": "String",
    },
    "GraphQLMaxTaskCount62412A02": Object {
      "Default": 0,
      "Description": "Maximum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "GraphQLMinTaskCount0807D92D": Object {
      "Default": 0,
      "Description": "Minimum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "GraphQLTaskSize228AD0D2": Object {
      "AllowedValues": Array [
        "nano",
        "micro",
        "small",
        "medium",
        "large",
        "xlarge",
        "2xlarge",
        "4xlarge",
      ],
      "Default": "nano",
      "Description": "Fargare task size",
      "Type": "String",
    },
    "JwtExpiryLimit": Object {
      "Default": 3600,
      "Description": "How long tokens are valid for. Defaults to 3600 (1 hour), maximum 604,800 seconds (one week).",
      "MaxValue": 604800,
      "MinValue": 300,
      "Type": "Number",
    },
    "KongMaxTaskCountA4145D65": Object {
      "Default": 20,
      "Description": "Maximum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "KongMinTaskCount4451EF4C": Object {
      "Default": 1,
      "Description": "Minimum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "KongTaskSize93C195E9": Object {
      "AllowedValues": Array [
        "nano",
        "micro",
        "small",
        "medium",
        "large",
        "xlarge",
        "2xlarge",
        "4xlarge",
      ],
      "Default": "nano",
      "Description": "Fargare task size",
      "Type": "String",
    },
    "MetaMaxTaskCount2749DE86": Object {
      "Default": 20,
      "Description": "Maximum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "MetaMinTaskCountEA12F444": Object {
      "Default": 1,
      "Description": "Minimum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "MetaTaskSize556D36D9": Object {
      "AllowedValues": Array [
        "nano",
        "micro",
        "small",
        "medium",
        "large",
        "xlarge",
        "2xlarge",
        "4xlarge",
      ],
      "Default": "nano",
      "Description": "Fargare task size",
      "Type": "String",
    },
    "PasswordMinLength": Object {
      "Default": "8",
      "Description": "When signup is disabled the only way to create new users is through invites. Defaults to false, all signups enabled.",
      "MaxValue": 128,
      "MinValue": 8,
      "Type": "Number",
    },
    "PostgresMetaApiVersion": Object {
      "Default": "v0.50.2",
      "Description": "Docker image tag - https://gallery.ecr.aws/supabase/postgres-meta",
      "Type": "String",
    },
    "RealtimeApiVersion": Object {
      "Default": "v0.25.1",
      "Description": "Docker image tag - https://gallery.ecr.aws/supabase/realtime",
      "Type": "String",
    },
    "RealtimeMaxTaskCountE72E1120": Object {
      "Default": 1,
      "Description": "Maximum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "RealtimeMinTaskCount306F67E8": Object {
      "Default": 1,
      "Description": "Minimum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "RealtimeTaskSize6077FE1F": Object {
      "AllowedValues": Array [
        "nano",
        "micro",
        "small",
        "medium",
        "large",
        "xlarge",
        "2xlarge",
        "4xlarge",
      ],
      "Default": "nano",
      "Description": "Fargare task size",
      "Type": "String",
    },
    "RedirectUrls": Object {
      "Default": "",
      "Description": "URLs that auth providers are permitted to redirect to post authentication",
      "Type": "String",
    },
    "RestApiVersion": Object {
      "Default": "v9.0.1.20220802",
      "Description": "Docker image tag - https://gallery.ecr.aws/supabase/postgrest",
      "Type": "String",
    },
    "RestMaxTaskCount1D2E84B9": Object {
      "Default": 20,
      "Description": "Maximum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "RestMinTaskCount073959EA": Object {
      "Default": 1,
      "Description": "Minimum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "RestTaskSize14E11A14": Object {
      "AllowedValues": Array [
        "nano",
        "micro",
        "small",
        "medium",
        "large",
        "xlarge",
        "2xlarge",
        "4xlarge",
      ],
      "Default": "nano",
      "Description": "Fargare task size",
      "Type": "String",
    },
    "SenderEmail": Object {
      "AllowedPattern": "^[\\\\x20-\\\\x45]?[\\\\w-\\\\+]+(\\\\.[\\\\w]+)*@[\\\\w-]+(\\\\.[\\\\w]+)*(\\\\.[a-z]{2,})$",
      "ConstraintDescription": "must be a valid email address",
      "Default": "noreply@example.com",
      "Description": "This is the email address the emails are sent from. If Amazon WorkMail is enabled, it set \\"noreply@supabase-<account_id>.awsapps.com\\"",
      "Type": "String",
    },
    "SenderName": Object {
      "Default": "Supabase",
      "Description": "The From email sender name for all emails sent.",
      "Type": "String",
    },
    "SesRegion": Object {
      "AllowedValues": Array [
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2",
        "ap-south-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-northeast-3",
        "ap-southeast-1",
        "ap-southeast-2",
        "ca-central-1",
        "eu-central-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "eu-north-1",
        "sa-east-1",
      ],
      "Default": "us-west-2",
      "Description": "Amazon SES used for SMTP server. If you want to use Amazon WorkMail, need to set us-east-1, us-west-2 or eu-west-1.",
      "Type": "String",
    },
    "SiteUrl": Object {
      "Default": "http://localhost:3000",
      "Description": "The base URL your site is located at. Currently used in combination with other settings to construct URLs used in emails.",
      "Type": "String",
    },
    "StorageApiVersion": Object {
      "Default": "v0.24.3",
      "Description": "Docker image tag - https://gallery.ecr.aws/supabase/storage-api",
      "Type": "String",
    },
    "StorageMaxTaskCount372C6914": Object {
      "Default": 20,
      "Description": "Maximum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "StorageMinTaskCount07E65703": Object {
      "Default": 1,
      "Description": "Minimum fargate task count",
      "MinValue": 0,
      "Type": "Number",
    },
    "StorageTaskSizeB82D9CFB": Object {
      "AllowedValues": Array [
        "nano",
        "micro",
        "small",
        "medium",
        "large",
        "xlarge",
        "2xlarge",
        "4xlarge",
      ],
      "Default": "nano",
      "Description": "Fargare task size",
      "Type": "String",
    },
    "StudioAcmCertArn2D10C4B8": Object {
      "AllowedPattern": "^arn:aws:acm:[\\\\w-]+:[0-9]{12}:certificate/[\\\\w]{8}-[\\\\w]{4}-[\\\\w]{4}-[\\\\w]{4}-[\\\\w]{12}$|",
      "Default": "",
      "Description": "ACM Certificate ARN for Studio ALB with Cognito",
      "Type": "String",
    },
    "StudioVersion": Object {
      "Default": "0.22.08",
      "Description": "Docker image tag - https://gallery.ecr.aws/supabase/studio",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "e845402ce43b66fc6f20df4a239f20f8662eb6c7f920b94cf6542dd0e64ce0f7.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthFargateCloudmapService77173080": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "auth",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "AuthFargateSecurityGroup512F6031": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Auth/Fargate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "AuthFargateSecurityGroupfromSupabaseKongFargateSecurityGroupB95937A29999C3F749F0": Object {
      "Properties": Object {
        "Description": "from SupabaseKongFargateSecurityGroupB95937A2:9999",
        "FromPort": 9999,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "AuthFargateSecurityGroup512F6031",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KongFargateSecurityGroup972A8F5C",
            "GroupId",
          ],
        },
        "ToPort": 9999,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "AuthFargateService0D491951": Object {
      "DependsOn": Array [
        "DatabaseClusterInstance1078CC457",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": Object {
          "Fn::If": Array [
            "AuthServiceDisabledB6209B31",
            0,
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "EnableECSManagedTags": true,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "AuthFargateSecurityGroup512F6031",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "PropagateTags": "SERVICE",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 9999,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "AuthFargateCloudmapService77173080",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "AuthTaskDefinitionDBEE261E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "AuthFargateTaskCountTarget3E614905": Object {
      "Properties": Object {
        "MaxCapacity": Object {
          "Ref": "AuthMaxTaskCount9E585BDA",
        },
        "MinCapacity": Object {
          "Ref": "AuthMinTaskCount998F20C4",
        },
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "AuthFargateService0D491951",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "AuthFargateTaskCountTargetScaleOnCpu13FA76AD": Object {
      "Properties": Object {
        "PolicyName": "SupabaseAuthFargateTaskCountTargetScaleOnCpuC4150621",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "AuthFargateTaskCountTarget3E614905",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "AuthLogs940C0551": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "AuthParameterChanged2FC322F1": Object {
      "Properties": Object {
        "Description": "Supabase - Auth parameter changed",
        "EventPattern": Object {
          "detail": Object {
            "name": Array [
              Object {
                "prefix": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "/Auth/",
                    ],
                  ],
                },
              },
            ],
            "operation": Array [
              "Update",
            ],
          },
          "detail-type": Array [
            "Parameter Store Change",
          ],
          "source": Array [
            "aws.ssm",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "ForceDeployJobStateMachine528644B1",
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"services\\":[\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "AuthFargateService0D491951",
                      "Name",
                    ],
                  },
                  "\\"]}",
                ],
              ],
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "ForceDeployJobStateMachineEventsRole3137AB10",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "AuthProvider1ClientIdParameterA8CDD11D": Object {
      "Properties": Object {
        "Description": "The OAuth2 Client ID registered with the external provider.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Auth/External/",
              Object {
                "Fn::If": Array [
                  "AuthProvider1Enabled983DA6B5",
                  Object {
                    "Ref": "AuthProvider1Name740DD3F6",
                  },
                  "Provider1",
                ],
              },
              "/ClientId",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::If": Array [
            "AuthProvider1Enabled983DA6B5",
            Object {
              "Ref": "AuthProvider1ClientId5614D178",
            },
            "null",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AuthProvider1SecretParameter32101B7A": Object {
      "Properties": Object {
        "Description": "The OAuth2 Client Secret provided by the external provider when you registered.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Auth/External/",
              Object {
                "Fn::If": Array [
                  "AuthProvider1Enabled983DA6B5",
                  Object {
                    "Ref": "AuthProvider1Name740DD3F6",
                  },
                  "Provider1",
                ],
              },
              "/Secret",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::If": Array [
            "AuthProvider1Enabled983DA6B5",
            Object {
              "Ref": "AuthProvider1SecretAE54364F",
            },
            "null",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AuthProvider2ClientIdParameter30D2A6D6": Object {
      "Properties": Object {
        "Description": "The OAuth2 Client ID registered with the external provider.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Auth/External/",
              Object {
                "Fn::If": Array [
                  "AuthProvider2Enabled05B8862B",
                  Object {
                    "Ref": "AuthProvider2Name573986E5",
                  },
                  "Provider2",
                ],
              },
              "/ClientId",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::If": Array [
            "AuthProvider2Enabled05B8862B",
            Object {
              "Ref": "AuthProvider2ClientIdF3685A2B",
            },
            "null",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AuthProvider2SecretParameter4B28A4BE": Object {
      "Properties": Object {
        "Description": "The OAuth2 Client Secret provided by the external provider when you registered.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Auth/External/",
              Object {
                "Fn::If": Array [
                  "AuthProvider2Enabled05B8862B",
                  Object {
                    "Ref": "AuthProvider2Name573986E5",
                  },
                  "Provider2",
                ],
              },
              "/Secret",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::If": Array [
            "AuthProvider2Enabled05B8862B",
            Object {
              "Ref": "AuthProvider2Secret2662F55E",
            },
            "null",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AuthProvider3ClientIdParameter6DA38073": Object {
      "Properties": Object {
        "Description": "The OAuth2 Client ID registered with the external provider.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Auth/External/",
              Object {
                "Fn::If": Array [
                  "AuthProvider3Enabled464D1673",
                  Object {
                    "Ref": "AuthProvider3NameA8A7785F",
                  },
                  "Provider3",
                ],
              },
              "/ClientId",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::If": Array [
            "AuthProvider3Enabled464D1673",
            Object {
              "Ref": "AuthProvider3ClientId8DF3C6F7",
            },
            "null",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AuthProvider3SecretParameter7A77F7F4": Object {
      "Properties": Object {
        "Description": "The OAuth2 Client Secret provided by the external provider when you registered.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Auth/External/",
              Object {
                "Fn::If": Array [
                  "AuthProvider3Enabled464D1673",
                  Object {
                    "Ref": "AuthProvider3NameA8A7785F",
                  },
                  "Provider3",
                ],
              },
              "/Secret",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::If": Array [
            "AuthProvider3Enabled464D1673",
            Object {
              "Ref": "AuthProvider3Secret29364F33",
            },
            "null",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "AuthTaskDefinitionDBEE261E": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "GOTRUE_SITE_URL",
                "Value": Object {
                  "Ref": "SiteUrl",
                },
              },
              Object {
                "Name": "GOTRUE_URI_ALLOW_LIST",
                "Value": Object {
                  "Ref": "RedirectUrls",
                },
              },
              Object {
                "Name": "GOTRUE_DISABLE_SIGNUP",
                "Value": Object {
                  "Ref": "DisableSignup",
                },
              },
              Object {
                "Name": "GOTRUE_EXTERNAL_EMAIL_ENABLED",
                "Value": "true",
              },
              Object {
                "Name": "GOTRUE_EXTERNAL_PHONE_ENABLED",
                "Value": "false",
              },
              Object {
                "Name": "GOTRUE_RATE_LIMIT_EMAIL_SENT",
                "Value": "3600",
              },
              Object {
                "Name": "GOTRUE_PASSWORD_MIN_LENGTH",
                "Value": Object {
                  "Ref": "PasswordMinLength",
                },
              },
              Object {
                "Name": "GOTRUE_API_HOST",
                "Value": "0.0.0.0",
              },
              Object {
                "Name": "GOTRUE_API_PORT",
                "Value": "9999",
              },
              Object {
                "Name": "API_EXTERNAL_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "CdnDistribution149FA6C8",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "GOTRUE_DB_DRIVER",
                "Value": "postgres",
              },
              Object {
                "Name": "GOTRUE_JWT_EXP",
                "Value": Object {
                  "Ref": "JwtExpiryLimit",
                },
              },
              Object {
                "Name": "GOTRUE_JWT_AUD",
                "Value": "authenticated",
              },
              Object {
                "Name": "GOTRUE_JWT_ADMIN_ROLES",
                "Value": "service_role",
              },
              Object {
                "Name": "GOTRUE_JWT_DEFAULT_GROUP_NAME",
                "Value": "authenticated",
              },
              Object {
                "Name": "GOTRUE_SMTP_ADMIN_EMAIL",
                "Value": Object {
                  "Fn::If": Array [
                    "WorkMailEnabled",
                    Object {
                      "Fn::GetAtt": Array [
                        "WorkMailNestedStackWorkMailNestedStackResource44BA1505",
                        "Outputs.SupabaseWorkMailOrganizationUserSupabaseD0C6C408Email",
                      ],
                    },
                    Object {
                      "Ref": "SenderEmail",
                    },
                  ],
                },
              },
              Object {
                "Name": "GOTRUE_SMTP_HOST",
                "Value": Object {
                  "Fn::If": Array [
                    "WorkMailEnabled",
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "smtp.mail.",
                          Object {
                            "Ref": "SesRegion",
                          },
                          ".awsapps.com",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "email-smtp.",
                          Object {
                            "Ref": "SesRegion",
                          },
                          ".amazonaws.com",
                        ],
                      ],
                    },
                  ],
                },
              },
              Object {
                "Name": "GOTRUE_SMTP_PORT",
                "Value": "465",
              },
              Object {
                "Name": "GOTRUE_SMTP_USER",
                "Value": Object {
                  "Fn::If": Array [
                    "WorkMailEnabled",
                    Object {
                      "Fn::GetAtt": Array [
                        "WorkMailNestedStackWorkMailNestedStackResource44BA1505",
                        "Outputs.SupabaseWorkMailOrganizationUserSupabaseD0C6C408Email",
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "{{resolve:secretsmanager:",
                          Object {
                            "Ref": "SupabaseMailSecret777E0288",
                          },
                          ":SecretString:username::}}",
                        ],
                      ],
                    },
                  ],
                },
              },
              Object {
                "Name": "GOTRUE_SMTP_SENDER_NAME",
                "Value": Object {
                  "Ref": "SenderName",
                },
              },
              Object {
                "Name": "GOTRUE_MAILER_AUTOCONFIRM",
                "Value": "false",
              },
              Object {
                "Name": "GOTRUE_MAILER_URLPATHS_INVITE",
                "Value": "/auth/v1/verify",
              },
              Object {
                "Name": "GOTRUE_MAILER_URLPATHS_CONFIRMATION",
                "Value": "/auth/v1/verify",
              },
              Object {
                "Name": "GOTRUE_MAILER_URLPATHS_RECOVERY",
                "Value": "/auth/v1/verify",
              },
              Object {
                "Name": "GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE",
                "Value": "/auth/v1/verify",
              },
              Object {
                "Name": "GOTRUE_SMS_AUTOCONFIRM",
                "Value": "true",
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider1Enabled983DA6B5",
                          Object {
                            "Ref": "AuthProvider1Name740DD3F6",
                          },
                          "Provider1",
                        ],
                      },
                      "_ENABLED",
                    ],
                  ],
                },
                "Value": Object {
                  "Fn::If": Array [
                    "AuthProvider1Enabled983DA6B5",
                    "true",
                    "false",
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider1Enabled983DA6B5",
                          Object {
                            "Ref": "AuthProvider1Name740DD3F6",
                          },
                          "Provider1",
                        ],
                      },
                      "_REDIRECT_URI",
                    ],
                  ],
                },
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "CdnDistribution149FA6C8",
                          "DomainName",
                        ],
                      },
                      "/auth/v1/callback",
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider2Enabled05B8862B",
                          Object {
                            "Ref": "AuthProvider2Name573986E5",
                          },
                          "Provider2",
                        ],
                      },
                      "_ENABLED",
                    ],
                  ],
                },
                "Value": Object {
                  "Fn::If": Array [
                    "AuthProvider2Enabled05B8862B",
                    "true",
                    "false",
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider2Enabled05B8862B",
                          Object {
                            "Ref": "AuthProvider2Name573986E5",
                          },
                          "Provider2",
                        ],
                      },
                      "_REDIRECT_URI",
                    ],
                  ],
                },
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "CdnDistribution149FA6C8",
                          "DomainName",
                        ],
                      },
                      "/auth/v1/callback",
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider3Enabled464D1673",
                          Object {
                            "Ref": "AuthProvider3NameA8A7785F",
                          },
                          "Provider3",
                        ],
                      },
                      "_ENABLED",
                    ],
                  ],
                },
                "Value": Object {
                  "Fn::If": Array [
                    "AuthProvider3Enabled464D1673",
                    "true",
                    "false",
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider3Enabled464D1673",
                          Object {
                            "Ref": "AuthProvider3NameA8A7785F",
                          },
                          "Provider3",
                        ],
                      },
                      "_REDIRECT_URI",
                    ],
                  ],
                },
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "CdnDistribution149FA6C8",
                          "DomainName",
                        ],
                      },
                      "/auth/v1/callback",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "wget --no-verbose --tries=1 --spider http://localhost:9999/health || exit 1",
              ],
              "Interval": 10,
              "Retries": 3,
              "Timeout": 10,
            },
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public.ecr.aws/supabase/gotrue:",
                  Object {
                    "Ref": "AuthApiVersion",
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "AuthLogs940C0551",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 9999,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "GOTRUE_DB_DATABASE_URL",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "DatabaseWriterSearchPathAuthUrlParameter37B7880D",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "GOTRUE_JWT_SECRET",
                "ValueFrom": Object {
                  "Ref": "SupabaseJwtSecretFA404A75",
                },
              },
              Object {
                "Name": "GOTRUE_SMTP_PASS",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "SupabaseMailSecret777E0288",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider1Enabled983DA6B5",
                          Object {
                            "Ref": "AuthProvider1Name740DD3F6",
                          },
                          "Provider1",
                        ],
                      },
                      "_CLIENT_ID",
                    ],
                  ],
                },
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "AuthProvider1ClientIdParameterA8CDD11D",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider1Enabled983DA6B5",
                          Object {
                            "Ref": "AuthProvider1Name740DD3F6",
                          },
                          "Provider1",
                        ],
                      },
                      "_SECRET",
                    ],
                  ],
                },
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "AuthProvider1SecretParameter32101B7A",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider2Enabled05B8862B",
                          Object {
                            "Ref": "AuthProvider2Name573986E5",
                          },
                          "Provider2",
                        ],
                      },
                      "_CLIENT_ID",
                    ],
                  ],
                },
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "AuthProvider2ClientIdParameter30D2A6D6",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider2Enabled05B8862B",
                          Object {
                            "Ref": "AuthProvider2Name573986E5",
                          },
                          "Provider2",
                        ],
                      },
                      "_SECRET",
                    ],
                  ],
                },
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "AuthProvider2SecretParameter4B28A4BE",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider3Enabled464D1673",
                          Object {
                            "Ref": "AuthProvider3NameA8A7785F",
                          },
                          "Provider3",
                        ],
                      },
                      "_CLIENT_ID",
                    ],
                  ],
                },
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "AuthProvider3ClientIdParameter6DA38073",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "GOTRUE_EXTERNAL_",
                      Object {
                        "Fn::If": Array [
                          "AuthProvider3Enabled464D1673",
                          Object {
                            "Ref": "AuthProvider3NameA8A7785F",
                          },
                          "Provider3",
                        ],
                      },
                      "_SECRET",
                    ],
                  ],
                },
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "AuthProvider3SecretParameter7A77F7F4",
                      },
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 65536,
                "Name": "nofile",
                "SoftLimit": 65536,
              },
            ],
          },
        ],
        "Cpu": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "AuthTaskSize9895C206",
            },
            "cpu",
          ],
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuthTaskDefinitionExecutionRole8B68B008",
            "Arn",
          ],
        },
        "Family": "SupabaseAuthTaskDefinition474F8608",
        "Memory": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "AuthTaskSize9895C206",
            },
            "memory",
          ],
        },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "AuthTaskDefinitionTaskRole0174181B",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "AuthTaskDefinitionExecutionRole8B68B008": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "AuthTaskDefinitionExecutionRoleDefaultPolicy2A4B4627": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "AuthLogs940C0551",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "DatabaseWriterSearchPathAuthUrlParameter37B7880D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SupabaseJwtSecretFA404A75",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SupabaseMailSecret777E0288",
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "AuthProvider1ClientIdParameterA8CDD11D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "AuthProvider1SecretParameter32101B7A",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "AuthProvider2ClientIdParameter30D2A6D6",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "AuthProvider2SecretParameter4B28A4BE",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "AuthProvider3ClientIdParameter6DA38073",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "AuthProvider3SecretParameter7A77F7F4",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AuthTaskDefinitionExecutionRoleDefaultPolicy2A4B4627",
        "Roles": Array [
          Object {
            "Ref": "AuthTaskDefinitionExecutionRole8B68B008",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AuthTaskDefinitionTaskRole0174181B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "Bucket83908E77": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "CdnCachePolicy957D7474": Object {
      "Properties": Object {
        "CachePolicyConfig": Object {
          "Comment": "Policy for Supabase API",
          "DefaultTTL": 2,
          "MaxTTL": 600,
          "MinTTL": 0,
          "Name": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::StackName",
                },
                "-CachePolicy-",
                Object {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
          "ParametersInCacheKeyAndForwardedToOrigin": Object {
            "CookiesConfig": Object {
              "CookieBehavior": "none",
            },
            "EnableAcceptEncodingBrotli": true,
            "EnableAcceptEncodingGzip": true,
            "HeadersConfig": Object {
              "HeaderBehavior": "whitelist",
              "Headers": Array [
                "Authorization",
                "Host",
              ],
            },
            "QueryStringsConfig": Object {
              "QueryStringBehavior": "all",
            },
          },
        },
      },
      "Type": "AWS::CloudFront::CachePolicy",
    },
    "CdnDistribution149FA6C8": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.css",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.png",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.jpg",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.jpeg",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.svg",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.woff",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.woff2",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "*.js",
              "ResponseHeadersPolicyId": Object {
                "Ref": "CdnResponseHeadersPolicy36E4B823",
              },
              "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "Comment": "Supabase - CDN (Supabase/Cdn/Distribution)",
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 10,
              "ErrorCode": 500,
            },
            Object {
              "ErrorCachingMinTTL": 10,
              "ErrorCode": 501,
            },
            Object {
              "ErrorCachingMinTTL": 10,
              "ErrorCode": 502,
            },
            Object {
              "ErrorCachingMinTTL": 10,
              "ErrorCode": 503,
            },
            Object {
              "ErrorCachingMinTTL": 10,
              "ErrorCode": 504,
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": Object {
              "Ref": "CdnCachePolicy957D7474",
            },
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "ResponseHeadersPolicyId": Object {
              "Ref": "CdnResponseHeadersPolicy36E4B823",
            },
            "TargetOriginId": "SupabaseCdnDistributionOrigin1C1F18041",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2and3",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "http-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "KongLoadBalancerD341ED7C",
                  "DNSName",
                ],
              },
              "Id": "SupabaseCdnDistributionOrigin1C1F18041",
            },
          ],
          "WebACLId": Object {
            "Fn::If": Array [
              "CdnManagedWafEnabledD3A8F9B9",
              Object {
                "Fn::GetAtt": Array [
                  "CdnManagedWafNestedStackManagedWafNestedStackResourceD2D798AD",
                  "Outputs.SupabaseCdnManagedWafWebAcl63E0E0ABArn",
                ],
              },
              Object {
                "Ref": "CdnWebAclArn5923748A",
              },
            ],
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "CdnManagedWafNestedStackManagedWafNestedStackResourceD2D798AD": Object {
      "Condition": "CdnManagedWafEnabledD3A8F9B9",
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
              },
              "/e86d58643feadc7c623422c526a98c34e4f9dd5fd4b6df037afcdcf29c985d32.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "CdnResponseHeadersPolicy36E4B823": Object {
      "Properties": Object {
        "ResponseHeadersPolicyConfig": Object {
          "Comment": "Policy for Supabase API",
          "CustomHeadersConfig": Object {
            "Items": Array [
              Object {
                "Header": "server",
                "Override": true,
                "Value": "cloudfront",
              },
            ],
          },
          "Name": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::StackName",
                },
                "-ResponseHeadersPolicy-",
                Object {
                  "Ref": "AWS::Region",
                },
              ],
            ],
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
    "CloudFrontPrefixList22014EFD": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "CloudFrontPrefixListCustomResourcePolicyB6BABDE5",
      ],
      "Properties": Object {
        "Create": "{\\"service\\":\\"EC2\\",\\"action\\":\\"describeManagedPrefixLists\\",\\"parameters\\":{\\"Filters\\":[{\\"Name\\":\\"prefix-list-name\\",\\"Values\\":[\\"com.amazonaws.global.cloudfront.origin-facing\\"]}]},\\"physicalResourceId\\":{\\"responsePath\\":\\"PrefixLists.0.PrefixListId\\"}}",
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::PrefixList",
      "UpdateReplacePolicy": "Delete",
    },
    "CloudFrontPrefixListCustomResourcePolicyB6BABDE5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ec2:DescribeManagedPrefixLists",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudFrontPrefixListCustomResourcePolicyB6BABDE5",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "Cluster3DA9CCBA": Object {
      "Properties": Object {
        "CapacityProviders": Array [
          "FARGATE",
          "FARGATE_SPOT",
        ],
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DefaultCapacityProviderStrategy": Array [],
      },
      "Type": "AWS::ECS::ClusterCapacityProviderAssociations",
    },
    "ClusterDefaultServiceDiscoveryNamespaceC336F9B4": Object {
      "Properties": Object {
        "Name": "supabase.local",
        "Vpc": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ServiceDiscovery::PrivateDnsNamespace",
    },
    "ClusterEB0386A7": Object {
      "Properties": Object {
        "ClusterSettings": Array [
          Object {
            "Name": "containerInsights",
            "Value": "disabled",
          },
        ],
      },
      "Type": "AWS::ECS::Cluster",
    },
    "DatabaseCluster5B53A178": Object {
      "DeletionPolicy": "Snapshot",
      "Properties": Object {
        "CopyTagsToSnapshot": true,
        "DBClusterParameterGroupName": Object {
          "Ref": "DatabaseParameterGroup2A921026",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "DatabaseName": "postgres",
        "Engine": "aurora-postgresql",
        "EngineVersion": "14.4",
        "MasterUserPassword": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{{resolve:secretsmanager:",
              Object {
                "Ref": "SupabaseDatabaseClusterSecret2AA4A5CD6b2eb8af71bef5c6813259b78dc271d3",
              },
              ":SecretString:password::}}",
            ],
          ],
        },
        "MasterUsername": "supabase_admin",
        "Port": 5432,
        "ServerlessV2ScalingConfiguration": Object {
          "MaxCapacity": Object {
            "Ref": "DatabaseMaxCapacityDD9828CB",
          },
          "MinCapacity": Object {
            "Ref": "DatabaseMinCapacity82563E98",
          },
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": Array [
          Object {
            "Fn::GetAtt": Array [
              "DatabaseClusterSecurityGroupFEF1426A",
              "GroupId",
            ],
          },
        ],
      },
      "Type": "AWS::RDS::DBCluster",
      "UpdateReplacePolicy": "Snapshot",
    },
    "DatabaseClusterInstance105C1AA772": Object {
      "Condition": "DatabaseInstance10Enabled6673066F",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance1078CC457": Object {
      "Condition": "DatabaseInstance1EnabledA506D432",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance1174E7CB6A": Object {
      "Condition": "DatabaseInstance11EnabledB1C5CBAB",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance12787C1444": Object {
      "Condition": "DatabaseInstance12EnabledF3886774",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance130BE7A06C": Object {
      "Condition": "DatabaseInstance13Enabled3DB2AD18",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance14A0E728DF": Object {
      "Condition": "DatabaseInstance14Enabled80809892",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance150907340C": Object {
      "Condition": "DatabaseInstance15EnabledDC9D31BD",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance16BAC8D51F": Object {
      "Condition": "DatabaseInstance16Enabled2CE0876E",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance291B00375": Object {
      "Condition": "DatabaseInstance2Enabled9CE137EB",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance31BD73686": Object {
      "Condition": "DatabaseInstance3Enabled44A32710",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance41328D933": Object {
      "Condition": "DatabaseInstance4Enabled3E6E6545",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance57069E689": Object {
      "Condition": "DatabaseInstance5Enabled6A6E91B8",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance6B5F4EA10": Object {
      "Condition": "DatabaseInstance6EnabledF0D02CB8",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance7175B0096": Object {
      "Condition": "DatabaseInstance7Enabled1F2EE1B3",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance8DFFBD94A": Object {
      "Condition": "DatabaseInstance8Enabled22381EB2",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterInstance9B0243C77": Object {
      "Condition": "DatabaseInstance9Enabled9C35143A",
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "DBClusterIdentifier": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "DBInstanceClass": Object {
          "Ref": "DatabaseInstanceClass6CA66E68",
        },
        "DBSubnetGroupName": Object {
          "Ref": "DatabaseClusterSubnets5540150D",
        },
        "EnablePerformanceInsights": true,
        "Engine": "aurora-postgresql",
        "PerformanceInsightsRetentionPeriod": 7,
      },
      "Type": "AWS::RDS::DBInstance",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseClusterSecretAttachmentDC8466C0": Object {
      "Properties": Object {
        "SecretId": Object {
          "Ref": "SupabaseDatabaseClusterSecret2AA4A5CD6b2eb8af71bef5c6813259b78dc271d3",
        },
        "TargetId": Object {
          "Ref": "DatabaseCluster5B53A178",
        },
        "TargetType": "AWS::RDS::DBCluster",
      },
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
    },
    "DatabaseClusterSecretAttachmentPolicy3EB01968": Object {
      "Properties": Object {
        "ResourcePolicy": Object {
          "Statement": Array [
            Object {
              "Action": "secretsmanager:DeleteSecret",
              "Effect": "Deny",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "SecretId": Object {
          "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
        },
      },
      "Type": "AWS::SecretsManager::ResourcePolicy",
    },
    "DatabaseClusterSecretAttachmentRotation2DE8C19B": Object {
      "Properties": Object {
        "HostedRotationLambda": Object {
          "ExcludeCharacters": "%+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\=^",
          "RotationLambdaName": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Join": Array [
                    "-",
                    Array [
                      Object {
                        "Fn::Select": Array [
                          0,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Ref": "SupabaseDatabaseClusterSecret2AA4A5CD6b2eb8af71bef5c6813259b78dc271d3",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "-",
                              Object {
                                "Fn::Select": Array [
                                  6,
                                  Object {
                                    "Fn::Split": Array [
                                      ":",
                                      Object {
                                        "Ref": "SupabaseDatabaseClusterSecret2AA4A5CD6b2eb8af71bef5c6813259b78dc271d3",
                                      },
                                    ],
                                  },
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  ],
                },
                "RotationFunction",
              ],
            ],
          },
          "RotationType": "PostgreSQLSingleUser",
          "VpcSecurityGroupIds": Object {
            "Fn::GetAtt": Array [
              "DatabaseRotationSecurityGroup8E1B7C66",
              "GroupId",
            ],
          },
          "VpcSubnetIds": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
                },
                ",",
                Object {
                  "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
                },
              ],
            ],
          },
        },
        "RotationRules": Object {
          "AutomaticallyAfterDays": 30,
        },
        "SecretId": Object {
          "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
        },
      },
      "Type": "AWS::SecretsManager::RotationSchedule",
    },
    "DatabaseClusterSecurityGroupFEF1426A": Object {
      "Properties": Object {
        "GroupDescription": "RDS security group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseClusterSecurityGroupfromSupabaseAuthFargateSecurityGroup5DE52F13IndirectPort465139F0": Object {
      "Properties": Object {
        "Description": "from SupabaseAuthFargateSecurityGroup5DE52F13:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AuthFargateSecurityGroup512F6031",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromSupabaseDatabaseInitFunctionSecurityGroupD770E594IndirectPortB0EEFD79": Object {
      "Properties": Object {
        "Description": "from SupabaseDatabaseInitFunctionSecurityGroupD770E594:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseInitFunctionSecurityGroupAC823144",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromSupabaseDatabaseRotationSecurityGroup0A2F515EIndirectPort779B952D": Object {
      "Properties": Object {
        "Description": "Lambda to rotate secrets",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseRotationSecurityGroup8E1B7C66",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromSupabaseGraphQLFargateSecurityGroupE5556D47IndirectPort363DE43A": Object {
      "Properties": Object {
        "Description": "from SupabaseGraphQLFargateSecurityGroupE5556D47:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GraphQLFargateSecurityGroupC37FE3F0",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromSupabaseMetaFargateSecurityGroup4C60F9F5IndirectPortB220DB8A": Object {
      "Properties": Object {
        "Description": "from SupabaseMetaFargateSecurityGroup4C60F9F5:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "MetaFargateSecurityGroup9D26952C",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromSupabaseRealtimeFargateSecurityGroup06CDE48FIndirectPortE96BEA4D": Object {
      "Properties": Object {
        "Description": "from SupabaseRealtimeFargateSecurityGroup06CDE48F:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "RealtimeFargateSecurityGroupC1A41CAF",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromSupabaseRestFargateSecurityGroupBEED6704IndirectPortB0833D22": Object {
      "Properties": Object {
        "Description": "from SupabaseRestFargateSecurityGroupBEED6704:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "RestFargateSecurityGroupEADE3F44",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSecurityGroupfromSupabaseStorageFargateSecurityGroup7BC158B8IndirectPort0B5D095B": Object {
      "Properties": Object {
        "Description": "from SupabaseStorageFargateSecurityGroup7BC158B8:{IndirectPort}",
        "FromPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "DatabaseClusterSecurityGroupFEF1426A",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "StorageFargateSecurityGroupC6388B3F",
            "GroupId",
          ],
        },
        "ToPort": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Port",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "DatabaseClusterSubnets5540150D": Object {
      "Properties": Object {
        "DBSubnetGroupDescription": "Subnets for Cluster database",
        "SubnetIds": Array [
          Object {
            "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
          },
          Object {
            "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
          },
        ],
      },
      "Type": "AWS::RDS::DBSubnetGroup",
    },
    "DatabaseInitData630DB036": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DatabaseClusterInstance1078CC457",
      ],
      "Properties": Object {
        "Hostname": Object {
          "Fn::GetAtt": Array [
            "DatabaseCluster5B53A178",
            "Endpoint.Address",
          ],
        },
        "SecretId": Object {
          "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "DatabaseInitProviderframeworkonEventE5DC022A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::SupabaseInitData",
      "UpdateReplacePolicy": "Delete",
    },
    "DatabaseInitFunctionC94D0413": Object {
      "DependsOn": Array [
        "DatabaseInitFunctionServiceRoleDefaultPolicyE8E6FF4E",
        "DatabaseInitFunctionServiceRole8CD61C4B",
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "7f5f2f1f395730a561730f32c08ffc71deb7a027af48ec05e7031507005413d2.zip",
        },
        "Description": "Supabase - Database init function",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DatabaseInitFunctionServiceRole8CD61C4B",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 60,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DatabaseInitFunctionSecurityGroupAC823144",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
            },
            Object {
              "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DatabaseInitFunctionSecurityGroupAC823144": Object {
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function SupabaseDatabaseInitFunctionEFBA8E22",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseInitFunctionServiceRole8CD61C4B": Object {
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseInitFunctionServiceRoleDefaultPolicyE8E6FF4E": Object {
      "DependsOn": Array [
        "VPCPrivateSubnet1DefaultRouteAE1D6490",
        "VPCPrivateSubnet1RouteTableAssociation347902D1",
        "VPCPrivateSubnet2DefaultRouteF4F5CFD2",
        "VPCPrivateSubnet2RouteTableAssociation0C73D413",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseInitFunctionServiceRoleDefaultPolicyE8E6FF4E",
        "Roles": Array [
          Object {
            "Ref": "DatabaseInitFunctionServiceRole8CD61C4B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatabaseInitProviderframeworkonEventE5DC022A": Object {
      "DependsOn": Array [
        "DatabaseInitProviderframeworkonEventServiceRoleDefaultPolicy7FB834D6",
        "DatabaseInitProviderframeworkonEventServiceRoleF32E57C9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6ff23d2800aac27308e31c227529dc13854507c3b2598d2433fcf82604fa054d.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Supabase/Database/InitProvider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "DatabaseInitFunctionC94D0413",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DatabaseInitProviderframeworkonEventServiceRoleF32E57C9",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DatabaseInitProviderframeworkonEventServiceRoleDefaultPolicy7FB834D6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DatabaseInitFunctionC94D0413",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DatabaseInitFunctionC94D0413",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseInitProviderframeworkonEventServiceRoleDefaultPolicy7FB834D6",
        "Roles": Array [
          Object {
            "Ref": "DatabaseInitProviderframeworkonEventServiceRoleF32E57C9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatabaseInitProviderframeworkonEventServiceRoleF32E57C9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseParameterGroup2A921026": Object {
      "Properties": Object {
        "Description": "Supabase parameter group for aurora-postgresql",
        "Family": "aurora-postgresql14",
        "Parameters": Object {
          "autovacuum_max_workers": "GREATEST({DBInstanceClassMemory/64371566592},2)",
          "max_logical_replication_workers": "4",
          "max_parallel_workers": "2",
          "max_replication_slots": "20",
          "max_slot_wal_keep_size": "1024",
          "max_wal_senders": "20",
          "rds.logical_replication": "1",
          "shared_preload_libraries": "pg_stat_statements, pgaudit, pg_cron",
        },
      },
      "Type": "AWS::RDS::DBClusterParameterGroup",
    },
    "DatabaseReaderUrlParameter0C13E1C1": Object {
      "Properties": Object {
        "Description": "The standard connection PostgreSQL URI format.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Database/Url/Reader",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "postgres://{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:username::}}:{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:password::}}@",
              Object {
                "Fn::GetAtt": Array [
                  "DatabaseCluster5B53A178",
                  "ReadEndpoint.Address",
                ],
              },
              ":",
              Object {
                "Fn::GetAtt": Array [
                  "DatabaseCluster5B53A178",
                  "Endpoint.Port",
                ],
              },
              "/{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:dbname::}}",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DatabaseRotationSecurityGroup8E1B7C66": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Database/RotationSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DatabaseSecretChangeRule472D79D9": Object {
      "Properties": Object {
        "Description": "Supabase - Update parameter store, when DB secret rotated",
        "EventPattern": Object {
          "detail": Object {
            "additionalEventData": Object {
              "SecretId": Array [
                Object {
                  "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                },
              ],
            },
            "eventName": Array [
              "RotationSucceeded",
            ],
          },
          "source": Array [
            "aws.secretsmanager",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "DatabaseSyncSecretFunction60FEB86F",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DatabaseSecretChangeRuleAllowEventRuleSupabaseDatabaseSyncSecretFunction77A96CED31900495": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DatabaseSyncSecretFunction60FEB86F",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "DatabaseSecretChangeRule472D79D9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DatabaseSecretRotatedF099F998": Object {
      "Properties": Object {
        "Description": "Supabase - Database secret rotated",
        "EventPattern": Object {
          "detail": Object {
            "additionalEventData": Object {
              "SecretId": Array [
                Object {
                  "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                },
              ],
            },
            "eventName": Array [
              "RotationSucceeded",
            ],
          },
          "source": Array [
            "aws.secretsmanager",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Ref": "ForceDeployJobStateMachine528644B1",
            },
            "Id": "Target0",
            "Input": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"services\\":[\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "AuthFargateService0D491951",
                      "Name",
                    ],
                  },
                  "\\",\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "RestFargateServiceB761E563",
                      "Name",
                    ],
                  },
                  "\\",\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "RealtimeFargateService9F99B0D0",
                      "Name",
                    ],
                  },
                  "\\",\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "StorageFargateService64A6F247",
                      "Name",
                    ],
                  },
                  "\\",\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "MetaFargateServiceF2E9C2CC",
                      "Name",
                    ],
                  },
                  "\\",\\"",
                  Object {
                    "Fn::GetAtt": Array [
                      "StudioService1995B017",
                      "Name",
                    ],
                  },
                  "\\"]}",
                ],
              ],
            },
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "ForceDeployJobStateMachineEventsRole3137AB10",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DatabaseSyncSecretFunction60FEB86F": Object {
      "DependsOn": Array [
        "DatabaseSyncSecretFunctionServiceRoleDefaultPolicy5F9B6AA1",
        "DatabaseSyncSecretFunctionServiceRole189FFC3D",
      ],
      "Properties": Object {
        "Architectures": Array [
          "arm64",
        ],
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3f278c7910ed9f5f9f902ace411efd06e21030cf5aacc5bf7a174647193ac5f7.zip",
        },
        "Description": "Supabase - Sync DB secret to parameter store",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "READER_PARAMETER_NAME": Object {
              "Ref": "DatabaseReaderUrlParameter0C13E1C1",
            },
            "WRITER_AUTH_PARAMETER_NAME": Object {
              "Ref": "DatabaseWriterSearchPathAuthUrlParameter37B7880D",
            },
            "WRITER_PARAMETER_NAME": Object {
              "Ref": "DatabaseWriterUrlParameter9E7B47B6",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DatabaseSyncSecretFunctionServiceRole189FFC3D",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "DatabaseSyncSecretFunctionServiceRole189FFC3D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DatabaseSyncSecretFunctionServiceRoleDefaultPolicy5F9B6AA1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "DatabaseWriterUrlParameter9E7B47B6",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "DatabaseWriterSearchPathAuthUrlParameter37B7880D",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": "ssm:PutParameter",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "DatabaseReaderUrlParameter0C13E1C1",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DatabaseSyncSecretFunctionServiceRoleDefaultPolicy5F9B6AA1",
        "Roles": Array [
          Object {
            "Ref": "DatabaseSyncSecretFunctionServiceRole189FFC3D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DatabaseWriterSearchPathAuthUrlParameter37B7880D": Object {
      "Properties": Object {
        "Description": "The standard connection PostgreSQL URI format",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Database/Url/WriterSearchPathAuth",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "postgres://{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:username::}}:{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:password::}}@",
              Object {
                "Fn::GetAtt": Array [
                  "DatabaseCluster5B53A178",
                  "Endpoint.Address",
                ],
              },
              ":",
              Object {
                "Fn::GetAtt": Array [
                  "DatabaseCluster5B53A178",
                  "Endpoint.Port",
                ],
              },
              "/{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:dbname::}}?search_path=auth",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DatabaseWriterUrlParameter9E7B47B6": Object {
      "Properties": Object {
        "Description": "The standard connection PostgreSQL URI format.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/Database/Url/Writer",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "postgres://{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:username::}}:{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:password::}}@",
              Object {
                "Fn::GetAtt": Array [
                  "DatabaseCluster5B53A178",
                  "Endpoint.Address",
                ],
              },
              ":",
              Object {
                "Fn::GetAtt": Array [
                  "DatabaseCluster5B53A178",
                  "Endpoint.Port",
                ],
              },
              "/{{resolve:secretsmanager:",
              Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
              ":SecretString:dbname::}}",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "ForceDeployJobStateMachine528644B1": Object {
      "DependsOn": Array [
        "ForceDeployJobStateMachineRoleDefaultPolicyD8B5C2E1",
        "ForceDeployJobStateMachineRoleB8306D93",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Map\\",\\"States\\":{\\"Map\\":{\\"Type\\":\\"Map\\",\\"End\\":true,\\"Parameters\\":{\\"service.$\\":\\"$$.Map.Item.Value\\"},\\"Iterator\\":{\\"StartAt\\":\\"UpdateServiceTask\\",\\"States\\":{\\"UpdateServiceTask\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Comment\\":\\"Force deploy ECS Service\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::aws-sdk:ecs:updateService\\",\\"Parameters\\":{\\"Cluster\\":\\"",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "\\",\\"Service.$\\":\\"$.service\\",\\"ForceNewDeployment\\":true}}}},\\"ItemsPath\\":\\"$.services\\"}}}",
            ],
          ],
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "ForceDeployJobStateMachineRoleB8306D93",
            "Arn",
          ],
        },
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "ForceDeployJobStateMachineEventsRole3137AB10": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ForceDeployJobStateMachineEventsRoleDefaultPolicy485FD53C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "ForceDeployJobStateMachine528644B1",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ForceDeployJobStateMachineEventsRoleDefaultPolicy485FD53C",
        "Roles": Array [
          Object {
            "Ref": "ForceDeployJobStateMachineEventsRole3137AB10",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ForceDeployJobStateMachineRoleB8306D93": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::FindInMap": Array [
                    "ServiceprincipalMap",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "ForceDeployJobStateMachineRoleDefaultPolicyD8B5C2E1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ecs:UpdateService",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecs:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":service/",
                    Object {
                      "Ref": "ClusterEB0386A7",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ForceDeployJobStateMachineRoleDefaultPolicyD8B5C2E1",
        "Roles": Array [
          Object {
            "Ref": "ForceDeployJobStateMachineRoleB8306D93",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GraphQLFargateCloudmapService0FA0462B": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "graphql",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "GraphQLFargateSecurityGroupC37FE3F0": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/GraphQL/Fargate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GraphQLFargateSecurityGroupfromSupabaseKongFargateSecurityGroupB95937A25000185C16B2": Object {
      "Properties": Object {
        "Description": "from SupabaseKongFargateSecurityGroupB95937A2:5000",
        "FromPort": 5000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GraphQLFargateSecurityGroupC37FE3F0",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KongFargateSecurityGroup972A8F5C",
            "GroupId",
          ],
        },
        "ToPort": 5000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GraphQLFargateService28D3AC46": Object {
      "DependsOn": Array [
        "DatabaseClusterInstance1078CC457",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": Object {
          "Fn::If": Array [
            "GraphQLServiceDisabled2040BDFB",
            0,
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "EnableECSManagedTags": true,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "GraphQLFargateSecurityGroupC37FE3F0",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "PropagateTags": "SERVICE",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "GraphQLFargateCloudmapService0FA0462B",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "GraphQLTaskDefinition38339BB3",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "GraphQLFargateTaskCountTargetFBC4BAED": Object {
      "Properties": Object {
        "MaxCapacity": Object {
          "Ref": "GraphQLMaxTaskCount62412A02",
        },
        "MinCapacity": Object {
          "Ref": "GraphQLMinTaskCount0807D92D",
        },
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "GraphQLFargateService28D3AC46",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "GraphQLFargateTaskCountTargetScaleOnCpu71E2D51C": Object {
      "Properties": Object {
        "PolicyName": "SupabaseGraphQLFargateTaskCountTargetScaleOnCpuD8AB1A59",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "GraphQLFargateTaskCountTargetFBC4BAED",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "GraphQLLogsAACD57ED": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GraphQLTaskDefinition38339BB3": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "PG_GRAPHIQL",
                "Value": "false",
              },
              Object {
                "Name": "PG_ENHANCE_GRAPHIQL",
                "Value": "false",
              },
              Object {
                "Name": "PG_IGNORE_RBAC",
                "Value": "false",
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "wget --no-verbose --tries=1 --spider http://localhost:5000/health || exit 1",
              ],
              "Interval": 5,
              "Retries": 3,
              "Timeout": 5,
            },
            "Image": "public.ecr.aws/u3p7q2r8/postgraphile:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "GraphQLLogsAACD57ED",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "DATABASE_URL",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "DatabaseWriterUrlParameter9E7B47B6",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "JWT_SECRET",
                "ValueFrom": Object {
                  "Ref": "SupabaseJwtSecretFA404A75",
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 65536,
                "Name": "nofile",
                "SoftLimit": 65536,
              },
            ],
          },
        ],
        "Cpu": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "GraphQLTaskSize228AD0D2",
            },
            "cpu",
          ],
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "GraphQLTaskDefinitionExecutionRole5AE89FC5",
            "Arn",
          ],
        },
        "Family": "SupabaseGraphQLTaskDefinitionD4D50D38",
        "Memory": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "GraphQLTaskSize228AD0D2",
            },
            "memory",
          ],
        },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "GraphQLTaskDefinitionTaskRole513F3843",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "GraphQLTaskDefinitionExecutionRole5AE89FC5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "GraphQLTaskDefinitionExecutionRoleDefaultPolicyA11AB8A4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "GraphQLLogsAACD57ED",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "DatabaseWriterUrlParameter9E7B47B6",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SupabaseJwtSecretFA404A75",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GraphQLTaskDefinitionExecutionRoleDefaultPolicyA11AB8A4",
        "Roles": Array [
          Object {
            "Ref": "GraphQLTaskDefinitionExecutionRole5AE89FC5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GraphQLTaskDefinitionTaskRole513F3843": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KongFargateCloudmapService5994A750": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "kong",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "KongFargateSecurityGroup972A8F5C": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Kong/Fargate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": Object {
              "Fn::GetAtt": Array [
                "VPCB9E5F0B4",
                "CidrBlock",
              ],
            },
            "Description": "NLB healthcheck",
            "FromPort": 8100,
            "IpProtocol": "tcp",
            "ToPort": 8100,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "KongFargateSecurityGroupfromIndirectPeer80007993D7F5": Object {
      "Properties": Object {
        "Description": "CloudFront",
        "FromPort": 8000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "KongFargateSecurityGroup972A8F5C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourcePrefixListId": Object {
          "Fn::GetAtt": Array [
            "CloudFrontPrefixList22014EFD",
            "PrefixLists.0.PrefixListId",
          ],
        },
        "ToPort": 8000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "KongFargateServiceA23C8C36": Object {
      "DependsOn": Array [
        "KongLoadBalancerListenerA03182E0",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": Object {
          "Fn::If": Array [
            "KongServiceDisabled5CB631B8",
            0,
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "EnableECSManagedTags": true,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 8000,
            "TargetGroupArn": Object {
              "Ref": "KongTargetGroupD0277B2A",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "KongFargateSecurityGroup972A8F5C",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "PropagateTags": "SERVICE",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 8000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "KongFargateCloudmapService5994A750",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "KongTaskDefinitionAE44544D",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "KongFargateTaskCountTarget5B86CAE2": Object {
      "Properties": Object {
        "MaxCapacity": Object {
          "Ref": "KongMaxTaskCountA4145D65",
        },
        "MinCapacity": Object {
          "Ref": "KongMinTaskCount4451EF4C",
        },
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "KongFargateServiceA23C8C36",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "KongFargateTaskCountTargetScaleOnCpu4A3E2B55": Object {
      "Properties": Object {
        "PolicyName": "SupabaseKongFargateTaskCountTargetScaleOnCpu9D84D638",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "KongFargateTaskCountTarget5B86CAE2",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "KongLoadBalancerD341ED7C": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
          Object {
            "Key": "load_balancing.cross_zone.enabled",
            "Value": "true",
          },
        ],
        "Scheme": "internet-facing",
        "Subnets": Array [
          Object {
            "Ref": "VPCPublicSubnet1SubnetB4246D30",
          },
          Object {
            "Ref": "VPCPublicSubnet2Subnet74179F39",
          },
        ],
        "Type": "network",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "KongLoadBalancerListenerA03182E0": Object {
      "Properties": Object {
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "KongTargetGroupD0277B2A",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "KongLoadBalancerD341ED7C",
        },
        "Port": 80,
        "Protocol": "TCP",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "KongLogs4BD50491": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "KongTargetGroupD0277B2A": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPort": "8100",
        "Port": 8000,
        "Protocol": "TCP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "preserve_client_ip.enabled",
            "Value": "true",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "KongTaskDefinitionAE44544D": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "KONG_DNS_ORDER",
                "Value": "LAST,A,CNAME",
              },
              Object {
                "Name": "KONG_PLUGINS",
                "Value": "request-transformer,cors,key-auth,acl,opentelemetry",
              },
              Object {
                "Name": "KONG_STATUS_LISTEN",
                "Value": "0.0.0.0:8100",
              },
              Object {
                "Name": "SUPABASE_AUTH_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "http://",
                      Object {
                        "Fn::GetAtt": Array [
                          "AuthFargateCloudmapService77173080",
                          "Name",
                        ],
                      },
                      ".supabase.local:9999/",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_REST_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "http://",
                      Object {
                        "Fn::GetAtt": Array [
                          "RestFargateCloudmapServiceEC842507",
                          "Name",
                        ],
                      },
                      ".supabase.local:3000/",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_GRAPHQL_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "http://",
                      Object {
                        "Fn::GetAtt": Array [
                          "GraphQLFargateCloudmapService0FA0462B",
                          "Name",
                        ],
                      },
                      ".supabase.local:5000/graphql",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_REALTIME_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "http://",
                      Object {
                        "Fn::GetAtt": Array [
                          "RealtimeFargateCloudmapServiceECA0414A",
                          "Name",
                        ],
                      },
                      ".supabase.local:4000/socket/",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_STORAGE_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "http://",
                      Object {
                        "Fn::GetAtt": Array [
                          "StorageFargateCloudmapServiceB19C4F44",
                          "Name",
                        ],
                      },
                      ".supabase.local:5000/",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_META_HOST",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "http://",
                      Object {
                        "Fn::GetAtt": Array [
                          "MetaFargateCloudmapService49FA2349",
                          "Name",
                        ],
                      },
                      ".supabase.local:8080/",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD",
                "kong",
                "health",
              ],
              "Interval": 10,
              "Retries": 3,
              "Timeout": 10,
            },
            "Image": "public.ecr.aws/u3p7q2r8/kong:latest",
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "KongLogs4BD50491",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "ANON_KEY",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "SupabaseJwtAnonKey90E80F90",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "SERVICE_KEY",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "SupabaseJwtServiceRoleKey94675B64",
                      },
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 65536,
                "Name": "nofile",
                "SoftLimit": 65536,
              },
            ],
          },
        ],
        "Cpu": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "KongTaskSize93C195E9",
            },
            "cpu",
          ],
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "KongTaskDefinitionExecutionRole2593435E",
            "Arn",
          ],
        },
        "Family": "SupabaseKongTaskDefinitionDEF6E72D",
        "Memory": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "KongTaskSize93C195E9",
            },
            "memory",
          ],
        },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "KongTaskDefinitionTaskRole59341FD6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "KongTaskDefinitionExecutionRole2593435E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "KongTaskDefinitionExecutionRoleDefaultPolicyF6446340": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "KongLogs4BD50491",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "SupabaseJwtAnonKey90E80F90",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "SupabaseJwtServiceRoleKey94675B64",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "KongTaskDefinitionExecutionRoleDefaultPolicyF6446340",
        "Roles": Array [
          Object {
            "Ref": "KongTaskDefinitionExecutionRole2593435E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "KongTaskDefinitionTaskRole59341FD6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MetaFargateCloudmapService49FA2349": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "meta",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "MetaFargateSecurityGroup9D26952C": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Meta/Fargate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "MetaFargateSecurityGroupfromSupabaseKongFargateSecurityGroupB95937A280805A303D6E": Object {
      "Properties": Object {
        "Description": "from SupabaseKongFargateSecurityGroupB95937A2:8080",
        "FromPort": 8080,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "MetaFargateSecurityGroup9D26952C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KongFargateSecurityGroup972A8F5C",
            "GroupId",
          ],
        },
        "ToPort": 8080,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "MetaFargateServiceF2E9C2CC": Object {
      "DependsOn": Array [
        "DatabaseClusterInstance1078CC457",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": Object {
          "Fn::If": Array [
            "MetaServiceDisabled3B808F33",
            0,
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "EnableECSManagedTags": true,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "MetaFargateSecurityGroup9D26952C",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "PropagateTags": "SERVICE",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 8080,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "MetaFargateCloudmapService49FA2349",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "MetaTaskDefinition286A1512",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "MetaFargateTaskCountTargetAA0B984C": Object {
      "Properties": Object {
        "MaxCapacity": Object {
          "Ref": "MetaMaxTaskCount2749DE86",
        },
        "MinCapacity": Object {
          "Ref": "MetaMinTaskCountEA12F444",
        },
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "MetaFargateServiceF2E9C2CC",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "MetaFargateTaskCountTargetScaleOnCpu8BCDFDD4": Object {
      "Properties": Object {
        "PolicyName": "SupabaseMetaFargateTaskCountTargetScaleOnCpu74816CBC",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "MetaFargateTaskCountTargetAA0B984C",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "MetaLogs80FD71C7": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "MetaTaskDefinition286A1512": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "PG_META_PORT",
                "Value": "8080",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public.ecr.aws/supabase/postgres-meta:",
                  Object {
                    "Ref": "PostgresMetaApiVersion",
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "MetaLogs80FD71C7",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 8080,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "PG_META_DB_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "PG_META_DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "PG_META_DB_NAME",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "PG_META_DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "PG_META_DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 65536,
                "Name": "nofile",
                "SoftLimit": 65536,
              },
            ],
          },
        ],
        "Cpu": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "MetaTaskSize556D36D9",
            },
            "cpu",
          ],
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "MetaTaskDefinitionExecutionRole93D83399",
            "Arn",
          ],
        },
        "Family": "SupabaseMetaTaskDefinition428DEBA5",
        "Memory": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "MetaTaskSize556D36D9",
            },
            "memory",
          ],
        },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "MetaTaskDefinitionTaskRole18CD498C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "MetaTaskDefinitionExecutionRole93D83399": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "MetaTaskDefinitionExecutionRoleDefaultPolicy5A6F1F9C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MetaLogs80FD71C7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MetaTaskDefinitionExecutionRoleDefaultPolicy5A6F1F9C",
        "Roles": Array [
          Object {
            "Ref": "MetaTaskDefinitionExecutionRole93D83399",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MetaTaskDefinitionTaskRole18CD498C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RealtimeFargateCloudmapServiceECA0414A": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "realtime",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RealtimeFargateSecurityGroupC1A41CAF": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Realtime/Fargate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RealtimeFargateSecurityGroupfromSupabaseKongFargateSecurityGroupB95937A240004295BD18": Object {
      "Properties": Object {
        "Description": "from SupabaseKongFargateSecurityGroupB95937A2:4000",
        "FromPort": 4000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "RealtimeFargateSecurityGroupC1A41CAF",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KongFargateSecurityGroup972A8F5C",
            "GroupId",
          ],
        },
        "ToPort": 4000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RealtimeFargateService9F99B0D0": Object {
      "DependsOn": Array [
        "DatabaseClusterInstance1078CC457",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": Object {
          "Fn::If": Array [
            "RealtimeServiceDisabledD3DB8A99",
            0,
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "EnableECSManagedTags": true,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "RealtimeFargateSecurityGroupC1A41CAF",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "PropagateTags": "SERVICE",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 4000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "RealtimeFargateCloudmapServiceECA0414A",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "RealtimeTaskDefinition52361C2C",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RealtimeFargateTaskCountTargetCB8D8004": Object {
      "Properties": Object {
        "MaxCapacity": Object {
          "Ref": "RealtimeMaxTaskCountE72E1120",
        },
        "MinCapacity": Object {
          "Ref": "RealtimeMinTaskCount306F67E8",
        },
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "RealtimeFargateService9F99B0D0",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "RealtimeFargateTaskCountTargetScaleOnCpu9094D641": Object {
      "Properties": Object {
        "PolicyName": "SupabaseRealtimeFargateTaskCountTargetScaleOnCpu4D264B1A",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "RealtimeFargateTaskCountTargetCB8D8004",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "RealtimeLogs5C43159D": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RealtimeTaskDefinition52361C2C": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Command": Array [
              "bash",
              "-c",
              "./prod/rel/realtime/bin/realtime eval Realtime.Release.migrate && ./prod/rel/realtime/bin/realtime start",
            ],
            "Environment": Array [
              Object {
                "Name": "DB_SSL",
                "Value": "false",
              },
              Object {
                "Name": "PORT",
                "Value": "4000",
              },
              Object {
                "Name": "REPLICATION_MODE",
                "Value": "RLS",
              },
              Object {
                "Name": "REPLICATION_POLL_INTERVAL",
                "Value": "300",
              },
              Object {
                "Name": "SUBSCRIPTION_SYNC_INTERVAL",
                "Value": "60000",
              },
              Object {
                "Name": "SECURE_CHANNELS",
                "Value": "true",
              },
              Object {
                "Name": "SLOT_NAME",
                "Value": "realtime_rls",
              },
              Object {
                "Name": "TEMPORARY_SLOT",
                "Value": "true",
              },
              Object {
                "Name": "MAX_REPLICATION_LAG_MB",
                "Value": "1000",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public.ecr.aws/supabase/realtime:",
                  Object {
                    "Ref": "RealtimeApiVersion",
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "RealtimeLogs5C43159D",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 4000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "JWT_SECRET",
                "ValueFrom": Object {
                  "Ref": "SupabaseJwtSecretFA404A75",
                },
              },
              Object {
                "Name": "DB_HOST",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":host::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PORT",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":port::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_NAME",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":dbname::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_USER",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":username::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "DB_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 65536,
                "Name": "nofile",
                "SoftLimit": 65536,
              },
            ],
          },
        ],
        "Cpu": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "RealtimeTaskSize6077FE1F",
            },
            "cpu",
          ],
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "RealtimeTaskDefinitionExecutionRoleCD260B29",
            "Arn",
          ],
        },
        "Family": "SupabaseRealtimeTaskDefinition9B533F0B",
        "Memory": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "RealtimeTaskSize6077FE1F",
            },
            "memory",
          ],
        },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "RealtimeTaskDefinitionTaskRole8324A2B1",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RealtimeTaskDefinitionExecutionRoleCD260B29": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RealtimeTaskDefinitionExecutionRoleDefaultPolicyBD7C355B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "RealtimeLogs5C43159D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SupabaseJwtSecretFA404A75",
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RealtimeTaskDefinitionExecutionRoleDefaultPolicyBD7C355B",
        "Roles": Array [
          Object {
            "Ref": "RealtimeTaskDefinitionExecutionRoleCD260B29",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RealtimeTaskDefinitionTaskRole8324A2B1": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RestFargateCloudmapServiceEC842507": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "rest",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "RestFargateSecurityGroupEADE3F44": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Rest/Fargate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RestFargateSecurityGroupfromSupabaseAuthFargateSecurityGroup5DE52F13300075ED213D": Object {
      "Properties": Object {
        "Description": "from SupabaseAuthFargateSecurityGroup5DE52F13:3000",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "RestFargateSecurityGroupEADE3F44",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "AuthFargateSecurityGroup512F6031",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RestFargateSecurityGroupfromSupabaseKongFargateSecurityGroupB95937A23000F613D8C3": Object {
      "Properties": Object {
        "Description": "from SupabaseKongFargateSecurityGroupB95937A2:3000",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "RestFargateSecurityGroupEADE3F44",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KongFargateSecurityGroup972A8F5C",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RestFargateSecurityGroupfromSupabaseStorageFargateSecurityGroup7BC158B8300068CA1C96": Object {
      "Properties": Object {
        "Description": "from SupabaseStorageFargateSecurityGroup7BC158B8:3000",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "RestFargateSecurityGroupEADE3F44",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "StorageFargateSecurityGroupC6388B3F",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "RestFargateServiceB761E563": Object {
      "DependsOn": Array [
        "DatabaseClusterInstance1078CC457",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": Object {
          "Fn::If": Array [
            "RestServiceDisabled280508EE",
            0,
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "EnableECSManagedTags": true,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "RestFargateSecurityGroupEADE3F44",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "PropagateTags": "SERVICE",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 3000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "RestFargateCloudmapServiceEC842507",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "RestTaskDefinition4EBA60E9",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "RestFargateTaskCountTarget12C6E719": Object {
      "Properties": Object {
        "MaxCapacity": Object {
          "Ref": "RestMaxTaskCount1D2E84B9",
        },
        "MinCapacity": Object {
          "Ref": "RestMinTaskCount073959EA",
        },
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "RestFargateServiceB761E563",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "RestFargateTaskCountTargetScaleOnCpu7B420701": Object {
      "Properties": Object {
        "PolicyName": "SupabaseRestFargateTaskCountTargetScaleOnCpuCCCFCAEB",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "RestFargateTaskCountTarget12C6E719",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "RestLogsE8B49088": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "RestTaskDefinition4EBA60E9": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "PGRST_DB_SCHEMAS",
                "Value": "public,storage,graphql_public",
              },
              Object {
                "Name": "PGRST_DB_ANON_ROLE",
                "Value": "anon",
              },
              Object {
                "Name": "PGRST_DB_USE_LEGACY_GUCS",
                "Value": "false",
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "postgrest/postgrest:",
                  Object {
                    "Ref": "RestApiVersion",
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "RestLogsE8B49088",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "PGRST_DB_URI",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "DatabaseWriterUrlParameter9E7B47B6",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "PGRST_JWT_SECRET",
                "ValueFrom": Object {
                  "Ref": "SupabaseJwtSecretFA404A75",
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 65536,
                "Name": "nofile",
                "SoftLimit": 65536,
              },
            ],
          },
        ],
        "Cpu": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "RestTaskSize14E11A14",
            },
            "cpu",
          ],
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "RestTaskDefinitionExecutionRole3F0CBE29",
            "Arn",
          ],
        },
        "Family": "SupabaseRestTaskDefinitionDA0C2E15",
        "Memory": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "RestTaskSize14E11A14",
            },
            "memory",
          ],
        },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "ARM64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "RestTaskDefinitionTaskRole94551FBF",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "RestTaskDefinitionExecutionRole3F0CBE29": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "RestTaskDefinitionExecutionRoleDefaultPolicyB130F5B5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "RestLogsE8B49088",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "DatabaseWriterUrlParameter9E7B47B6",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SupabaseJwtSecretFA404A75",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "RestTaskDefinitionExecutionRoleDefaultPolicyB130F5B5",
        "Roles": Array [
          Object {
            "Ref": "RestTaskDefinitionExecutionRole3F0CBE29",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RestTaskDefinitionTaskRole94551FBF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StorageFargateCloudmapServiceB19C4F44": Object {
      "Properties": Object {
        "DnsConfig": Object {
          "DnsRecords": Array [
            Object {
              "TTL": 10,
              "Type": "SRV",
            },
            Object {
              "TTL": 10,
              "Type": "A",
            },
          ],
          "NamespaceId": Object {
            "Fn::GetAtt": Array [
              "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
              "Id",
            ],
          },
          "RoutingPolicy": "MULTIVALUE",
        },
        "HealthCheckCustomConfig": Object {
          "FailureThreshold": 1,
        },
        "Name": "storage",
        "NamespaceId": Object {
          "Fn::GetAtt": Array [
            "ClusterDefaultServiceDiscoveryNamespaceC336F9B4",
            "Id",
          ],
        },
      },
      "Type": "AWS::ServiceDiscovery::Service",
    },
    "StorageFargateSecurityGroupC6388B3F": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Storage/Fargate/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "StorageFargateSecurityGroupfromSupabaseKongFargateSecurityGroupB95937A25000F003E87B": Object {
      "Properties": Object {
        "Description": "from SupabaseKongFargateSecurityGroupB95937A2:5000",
        "FromPort": 5000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "StorageFargateSecurityGroupC6388B3F",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "KongFargateSecurityGroup972A8F5C",
            "GroupId",
          ],
        },
        "ToPort": 5000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "StorageFargateService64A6F247": Object {
      "DependsOn": Array [
        "DatabaseClusterInstance1078CC457",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "DeploymentCircuitBreaker": Object {
            "Enable": true,
            "Rollback": true,
          },
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "DeploymentController": Object {
          "Type": "ECS",
        },
        "DesiredCount": Object {
          "Fn::If": Array [
            "StorageServiceDisabled05C15E2C",
            0,
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "EnableECSManagedTags": true,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "StorageFargateSecurityGroupC6388B3F",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "PropagateTags": "SERVICE",
        "ServiceRegistries": Array [
          Object {
            "ContainerName": "app",
            "ContainerPort": 5000,
            "RegistryArn": Object {
              "Fn::GetAtt": Array [
                "StorageFargateCloudmapServiceB19C4F44",
                "Arn",
              ],
            },
          },
        ],
        "TaskDefinition": Object {
          "Ref": "StorageTaskDefinition6B21D26E",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "StorageFargateTaskCountTarget6527B498": Object {
      "Properties": Object {
        "MaxCapacity": Object {
          "Ref": "StorageMaxTaskCount372C6914",
        },
        "MinCapacity": Object {
          "Ref": "StorageMinTaskCount07E65703",
        },
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "StorageFargateService64A6F247",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "StorageFargateTaskCountTargetScaleOnCpu81945CB0": Object {
      "Properties": Object {
        "PolicyName": "SupabaseStorageFargateTaskCountTargetScaleOnCpu9B4A7A5C",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "StorageFargateTaskCountTarget6527B498",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "StorageLogs2A2D4D26": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 30,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "StorageTaskDefinition6B21D26E": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "POSTGREST_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "http://",
                      Object {
                        "Fn::GetAtt": Array [
                          "RestFargateCloudmapServiceEC842507",
                          "Name",
                        ],
                      },
                      ".supabase.local:3000",
                    ],
                  ],
                },
              },
              Object {
                "Name": "PGOPTIONS",
                "Value": "-c search_path=storage,public",
              },
              Object {
                "Name": "FILE_SIZE_LIMIT",
                "Value": "52428800",
              },
              Object {
                "Name": "TENANT_ID",
                "Value": "stub",
              },
              Object {
                "Name": "IS_MULTITENANT",
                "Value": "false",
              },
              Object {
                "Name": "STORAGE_BACKEND",
                "Value": "s3",
              },
              Object {
                "Name": "REGION",
                "Value": Object {
                  "Ref": "AWS::Region",
                },
              },
              Object {
                "Name": "GLOBAL_S3_BUCKET",
                "Value": Object {
                  "Ref": "Bucket83908E77",
                },
              },
            ],
            "Essential": true,
            "HealthCheck": Object {
              "Command": Array [
                "CMD-SHELL",
                "wget --no-verbose --tries=1 --spider http://localhost:5000/status || exit 1",
              ],
              "Interval": 10,
              "Retries": 3,
              "Timeout": 10,
            },
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public.ecr.aws/supabase/storage-api:",
                  Object {
                    "Ref": "StorageApiVersion",
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "StorageLogs2A2D4D26",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "ecs",
              },
            },
            "Name": "app",
            "PortMappings": Array [
              Object {
                "ContainerPort": 5000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "ANON_KEY",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "SupabaseJwtAnonKey90E80F90",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "SERVICE_KEY",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "SupabaseJwtServiceRoleKey94675B64",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "PGRST_JWT_SECRET",
                "ValueFrom": Object {
                  "Ref": "SupabaseJwtSecretFA404A75",
                },
              },
              Object {
                "Name": "DATABASE_URL",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "DatabaseWriterUrlParameter9E7B47B6",
                      },
                    ],
                  ],
                },
              },
            ],
            "Ulimits": Array [
              Object {
                "HardLimit": 65536,
                "Name": "nofile",
                "SoftLimit": 65536,
              },
            ],
          },
        ],
        "Cpu": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "StorageTaskSizeB82D9CFB",
            },
            "cpu",
          ],
        },
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "StorageTaskDefinitionExecutionRoleAEB5CF80",
            "Arn",
          ],
        },
        "Family": "SupabaseStorageTaskDefinition0123FC26",
        "Memory": Object {
          "Fn::FindInMap": Array [
            "TaskSize",
            Object {
              "Ref": "StorageTaskSizeB82D9CFB",
            },
            "memory",
          ],
        },
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "RuntimePlatform": Object {
          "CpuArchitecture": "X86_64",
          "OperatingSystemFamily": "LINUX",
        },
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "StorageTaskDefinitionTaskRole24C4C137",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "StorageTaskDefinitionExecutionRoleAEB5CF80": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StorageTaskDefinitionExecutionRoleDefaultPolicy537D0826": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "StorageLogs2A2D4D26",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "SupabaseJwtAnonKey90E80F90",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "SupabaseJwtServiceRoleKey94675B64",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SupabaseJwtSecretFA404A75",
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "DatabaseWriterUrlParameter9E7B47B6",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StorageTaskDefinitionExecutionRoleDefaultPolicy537D0826",
        "Roles": Array [
          Object {
            "Ref": "StorageTaskDefinitionExecutionRoleAEB5CF80",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StorageTaskDefinitionTaskRole24C4C137": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StorageTaskDefinitionTaskRoleDefaultPolicy3448147D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "Bucket83908E77",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "Bucket83908E77",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StorageTaskDefinitionTaskRoleDefaultPolicy3448147D",
        "Roles": Array [
          Object {
            "Ref": "StorageTaskDefinitionTaskRole24C4C137",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StudioClient100BA227": Object {
      "Condition": "StudioHttpsEnabledFB7951B2",
      "Properties": Object {
        "AllowedOAuthFlows": Array [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "openid",
        ],
        "CallbackURLs": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://",
                Object {
                  "Fn::GetAtt": Array [
                    "StudioLB850A0917",
                    "DNSName",
                  ],
                },
                "/oauth2/idpresponse",
              ],
            ],
          },
        ],
        "ExplicitAuthFlows": Array [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": true,
        "LogoutURLs": Array [
          "https://example.com",
        ],
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "UserPoolId": Object {
          "Ref": "StudioUserPool94F50620",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "StudioLB850A0917": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
        "VPCPublicSubnet2DefaultRouteB7481BBA",
        "VPCPublicSubnet2RouteTableAssociation5A808732",
      ],
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "false",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "StudioLBSecurityGroupD6350C35",
              "GroupId",
            ],
          },
        ],
        "Subnets": Array [
          Object {
            "Ref": "VPCPublicSubnet1SubnetB4246D30",
          },
          Object {
            "Ref": "VPCPublicSubnet2Subnet74179F39",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "StudioLBPublicListenerECSGroupB7410BDD": Object {
      "Properties": Object {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetGroupAttributes": Array [
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "ip",
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "StudioLBPublicListenerF4E3892D": Object {
      "Properties": Object {
        "Certificates": Object {
          "Fn::If": Array [
            "StudioHttpsEnabledFB7951B2",
            Array [
              Object {
                "CertificateArn": Object {
                  "Ref": "StudioAcmCertArn2D10C4B8",
                },
              },
            ],
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "DefaultActions": Array [
          Object {
            "Order": Object {
              "Fn::If": Array [
                "StudioHttpsEnabledFB7951B2",
                2,
                1,
              ],
            },
            "TargetGroupArn": Object {
              "Ref": "StudioLBPublicListenerECSGroupB7410BDD",
            },
            "Type": "forward",
          },
          Object {
            "Fn::If": Array [
              "StudioHttpsEnabledFB7951B2",
              Object {
                "AuthenticateCognitoConfig": Object {
                  "UserPoolArn": Object {
                    "Fn::GetAtt": Array [
                      "StudioUserPool94F50620",
                      "Arn",
                    ],
                  },
                  "UserPoolClientId": Object {
                    "Ref": "StudioClient100BA227",
                  },
                  "UserPoolDomain": Object {
                    "Fn::Select": Array [
                      2,
                      Object {
                        "Fn::Split": Array [
                          "/",
                          Object {
                            "Ref": "AWS::StackId",
                          },
                        ],
                      },
                    ],
                  },
                },
                "Order": 1,
                "Type": "authenticate-cognito",
              },
              Object {
                "Ref": "AWS::NoValue",
              },
            ],
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "StudioLB850A0917",
        },
        "Port": Object {
          "Fn::If": Array [
            "StudioHttpsEnabledFB7951B2",
            443,
            80,
          ],
        },
        "Protocol": Object {
          "Fn::If": Array [
            "StudioHttpsEnabledFB7951B2",
            "HTTPS",
            "HTTP",
          ],
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "StudioLBSecurityGroupD6350C35": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB SupabaseStudioLB132CBDFF",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 443",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "StudioLBSecurityGrouptoSupabaseStudioServiceSecurityGroup41B519B730004FA74141": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "StudioServiceSecurityGroup5209A715",
            "GroupId",
          ],
        },
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "StudioLBSecurityGroupD6350C35",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "StudioService1995B017": Object {
      "DependsOn": Array [
        "StudioLBPublicListenerECSGroupB7410BDD",
        "StudioLBPublicListenerF4E3892D",
      ],
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50,
        },
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LaunchType": "FARGATE",
        "LoadBalancers": Array [
          Object {
            "ContainerName": "web",
            "ContainerPort": 3000,
            "TargetGroupArn": Object {
              "Ref": "StudioLBPublicListenerECSGroupB7410BDD",
            },
          },
        ],
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "StudioServiceSecurityGroup5209A715",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
              },
              Object {
                "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "StudioTaskDef17A0330B",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "StudioServiceSecurityGroup5209A715": Object {
      "Properties": Object {
        "GroupDescription": "Supabase/Studio/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "StudioServiceSecurityGroupfromSupabaseStudioLBSecurityGroup49D6AE2530006CBBD8A2": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 3000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "StudioServiceSecurityGroup5209A715",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "StudioLBSecurityGroupD6350C35",
            "GroupId",
          ],
        },
        "ToPort": 3000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "StudioServiceTaskCountTargetF90DE957": Object {
      "Properties": Object {
        "MaxCapacity": 10,
        "MinCapacity": 1,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "service/",
              Object {
                "Ref": "ClusterEB0386A7",
              },
              "/",
              Object {
                "Fn::GetAtt": Array [
                  "StudioService1995B017",
                  "Name",
                ],
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
            ],
          ],
        },
        "ScalableDimension": "ecs:service:DesiredCount",
        "ServiceNamespace": "ecs",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "StudioServiceTaskCountTargetScaleOnCpu77890CC4": Object {
      "Properties": Object {
        "PolicyName": "SupabaseStudioServiceTaskCountTargetScaleOnCpu0A2EC8EC",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "StudioServiceTaskCountTargetF90DE957",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 60,
          "TargetValue": 50,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "StudioTaskDef17A0330B": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Environment": Array [
              Object {
                "Name": "STUDIO_PG_META_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "CdnDistribution149FA6C8",
                          "DomainName",
                        ],
                      },
                      "/pg",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "CdnDistribution149FA6C8",
                          "DomainName",
                        ],
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_REST_URL",
                "Value": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "https://",
                      Object {
                        "Fn::GetAtt": Array [
                          "CdnDistribution149FA6C8",
                          "DomainName",
                        ],
                      },
                      "/rest/v1/",
                    ],
                  ],
                },
              },
            ],
            "Essential": true,
            "Image": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "public.ecr.aws/supabase/studio:",
                  Object {
                    "Ref": "StudioVersion",
                  },
                ],
              ],
            },
            "LogConfiguration": Object {
              "LogDriver": "awslogs",
              "Options": Object {
                "awslogs-group": Object {
                  "Ref": "StudioTaskDefwebLogGroup95CB5D4E",
                },
                "awslogs-region": Object {
                  "Ref": "AWS::Region",
                },
                "awslogs-stream-prefix": "Studio",
              },
            },
            "Name": "web",
            "PortMappings": Array [
              Object {
                "ContainerPort": 3000,
                "Protocol": "tcp",
              },
            ],
            "Secrets": Array [
              Object {
                "Name": "POSTGRES_PASSWORD",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
                      },
                      ":password::",
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_ANON_KEY",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "SupabaseJwtAnonKey90E80F90",
                      },
                    ],
                  ],
                },
              },
              Object {
                "Name": "SUPABASE_SERVICE_KEY",
                "ValueFrom": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":ssm:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":parameter",
                      Object {
                        "Ref": "SupabaseJwtServiceRoleKey94675B64",
                      },
                    ],
                  ],
                },
              },
            ],
          },
        ],
        "Cpu": "256",
        "ExecutionRoleArn": Object {
          "Fn::GetAtt": Array [
            "StudioTaskDefExecutionRoleA3E52254",
            "Arn",
          ],
        },
        "Family": "SupabaseStudioTaskDef0ECEB662",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "StudioTaskDefTaskRole30BC5B9C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "StudioTaskDefExecutionRoleA3E52254": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StudioTaskDefExecutionRoleDefaultPolicy806359C6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "StudioTaskDefwebLogGroup95CB5D4E",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "DatabaseClusterSecretAttachmentDC8466C0",
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "SupabaseJwtAnonKey90E80F90",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:DescribeParameters",
                "ssm:GetParameters",
                "ssm:GetParameter",
                "ssm:GetParameterHistory",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter",
                    Object {
                      "Ref": "SupabaseJwtServiceRoleKey94675B64",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StudioTaskDefExecutionRoleDefaultPolicy806359C6",
        "Roles": Array [
          Object {
            "Ref": "StudioTaskDefExecutionRoleA3E52254",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StudioTaskDefTaskRole30BC5B9C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StudioTaskDefwebLogGroup95CB5D4E": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "StudioUserPool94F50620": Object {
      "Condition": "StudioHttpsEnabledFB7951B2",
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_phone_number",
              "Priority": 1,
            },
            Object {
              "Name": "verified_email",
              "Priority": 2,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "SupabaseStudio-UserPool",
        "UsernameAttributes": Array [
          "email",
        ],
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "StudioUserPoolDomain83E076DB": Object {
      "Condition": "StudioHttpsEnabledFB7951B2",
      "Properties": Object {
        "Domain": Object {
          "Fn::Select": Array [
            2,
            Object {
              "Fn::Split": Array [
                "/",
                Object {
                  "Ref": "AWS::StackId",
                },
              ],
            },
          ],
        },
        "UserPoolId": Object {
          "Ref": "StudioUserPool94F50620",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "SupabaseDatabaseClusterSecret2AA4A5CD6b2eb8af71bef5c6813259b78dc271d3": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Generated by the CDK for stack: ",
              Object {
                "Ref": "AWS::StackName",
              },
            ],
          ],
        },
        "GenerateSecretString": Object {
          "ExcludeCharacters": "%+~\`#$&*()|[]{}:;<>?!'/@\\"\\\\=^",
          "GenerateStringKey": "password",
          "PasswordLength": 30,
          "SecretStringTemplate": "{\\"username\\":\\"supabase_admin\\"}",
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "SupabaseJwtAnonKey90E80F90": Object {
      "Properties": Object {
        "Description": "This key is safe to use in a browser if you have enabled Row Level Security for your tables and configured policies.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/JWT/anon",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::GetAtt": Array [
            "SupabaseJwtAnonRole874E82F9",
            "Token",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SupabaseJwtAnonRole874E82F9": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ExpiresIn": "10y",
        "Issuer": "supabase",
        "Payload": Object {
          "role": "anon",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SupabaseJwtProviderframeworkonEventABA31464",
            "Arn",
          ],
        },
      },
      "Type": "Custom::SupabaseApiRole",
      "UpdateReplacePolicy": "Delete",
    },
    "SupabaseJwtCreateApiRoleFunction40C9BEBC": Object {
      "DependsOn": Array [
        "SupabaseJwtCreateApiRoleFunctionServiceRoleDefaultPolicyF86CBBD8",
        "SupabaseJwtCreateApiRoleFunctionServiceRoleBB9B11C4",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "711810d3f57d7256b05963e398fa514d237d4766e38bf8be79e548f5e0bf2f53.zip",
        },
        "Description": "Supabase - Create API role & API key",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "JWT_SECRET_ARN": Object {
              "Ref": "SupabaseJwtSecretFA404A75",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SupabaseJwtCreateApiRoleFunctionServiceRoleBB9B11C4",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "SupabaseJwtCreateApiRoleFunctionServiceRoleBB9B11C4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SupabaseJwtCreateApiRoleFunctionServiceRoleDefaultPolicyF86CBBD8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "SupabaseJwtSecretFA404A75",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SupabaseJwtCreateApiRoleFunctionServiceRoleDefaultPolicyF86CBBD8",
        "Roles": Array [
          Object {
            "Ref": "SupabaseJwtCreateApiRoleFunctionServiceRoleBB9B11C4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SupabaseJwtProviderframeworkonEventABA31464": Object {
      "DependsOn": Array [
        "SupabaseJwtProviderframeworkonEventServiceRoleDefaultPolicyBFD1DEC9",
        "SupabaseJwtProviderframeworkonEventServiceRole62754416",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6ff23d2800aac27308e31c227529dc13854507c3b2598d2433fcf82604fa054d.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Supabase/SupabaseJwt/Provider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SupabaseJwtCreateApiRoleFunction40C9BEBC",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SupabaseJwtProviderframeworkonEventServiceRole62754416",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SupabaseJwtProviderframeworkonEventServiceRole62754416": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SupabaseJwtProviderframeworkonEventServiceRoleDefaultPolicyBFD1DEC9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SupabaseJwtCreateApiRoleFunction40C9BEBC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SupabaseJwtCreateApiRoleFunction40C9BEBC",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SupabaseJwtProviderframeworkonEventServiceRoleDefaultPolicyBFD1DEC9",
        "Roles": Array [
          Object {
            "Ref": "SupabaseJwtProviderframeworkonEventServiceRole62754416",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SupabaseJwtSecretFA404A75": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "Supabase - Json Web Token Secret",
        "GenerateSecretString": Object {
          "ExcludePunctuation": true,
          "PasswordLength": 64,
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "SupabaseJwtServiceRole36CFC81F": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ExpiresIn": "10y",
        "Issuer": "supabase",
        "Payload": Object {
          "role": "service_role",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SupabaseJwtProviderframeworkonEventABA31464",
            "Arn",
          ],
        },
      },
      "Type": "Custom::SupabaseApiRole",
      "UpdateReplacePolicy": "Delete",
    },
    "SupabaseJwtServiceRoleKey94675B64": Object {
      "Properties": Object {
        "Description": "This key has the ability to bypass Row Level Security. Never share it publicly.",
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/",
              Object {
                "Ref": "AWS::StackName",
              },
              "/JWT/service_role",
            ],
          ],
        },
        "Type": "String",
        "Value": Object {
          "Fn::GetAtt": Array [
            "SupabaseJwtServiceRole36CFC81F",
            "Token",
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SupabaseMailAccessKeyA6348E49": Object {
      "Properties": Object {
        "UserName": Object {
          "Ref": "SupabaseMailUser6287674D",
        },
      },
      "Type": "AWS::IAM::AccessKey",
    },
    "SupabaseMailGenSmtpPasswordFunction1BD23362": Object {
      "DependsOn": Array [
        "SupabaseMailGenSmtpPasswordFunctionServiceRole0A78DBF3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "f313788ca3f2fa052e96d53301df52b707c280b900d594a906b624fac83c5505.zip",
        },
        "Description": "Supabase - Generate SMTP Password Function",
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SupabaseMailGenSmtpPasswordFunctionServiceRole0A78DBF3",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "SupabaseMailGenSmtpPasswordFunctionServiceRole0A78DBF3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SupabaseMailGenSmtpPasswordProviderframeworkonEvent3038CFFF": Object {
      "DependsOn": Array [
        "SupabaseMailGenSmtpPasswordProviderframeworkonEventServiceRoleDefaultPolicy28275DA1",
        "SupabaseMailGenSmtpPasswordProviderframeworkonEventServiceRole4F5FF7D5",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "6ff23d2800aac27308e31c227529dc13854507c3b2598d2433fcf82604fa054d.zip",
        },
        "Description": "AWS CDK resource provider framework - onEvent (Supabase/SupabaseMail/GenSmtpPasswordProvider)",
        "Environment": Object {
          "Variables": Object {
            "USER_ON_EVENT_FUNCTION_ARN": Object {
              "Fn::GetAtt": Array [
                "SupabaseMailGenSmtpPasswordFunction1BD23362",
                "Arn",
              ],
            },
          },
        },
        "Handler": "framework.onEvent",
        "Role": Object {
          "Fn::GetAtt": Array [
            "SupabaseMailGenSmtpPasswordProviderframeworkonEventServiceRole4F5FF7D5",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "SupabaseMailGenSmtpPasswordProviderframeworkonEventServiceRole4F5FF7D5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "SupabaseMailGenSmtpPasswordProviderframeworkonEventServiceRoleDefaultPolicy28275DA1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "SupabaseMailGenSmtpPasswordFunction1BD23362",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "SupabaseMailGenSmtpPasswordFunction1BD23362",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SupabaseMailGenSmtpPasswordProviderframeworkonEventServiceRoleDefaultPolicy28275DA1",
        "Roles": Array [
          Object {
            "Ref": "SupabaseMailGenSmtpPasswordProviderframeworkonEventServiceRole4F5FF7D5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SupabaseMailPolicy575C9DA2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ses:SendRawEmail",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "SendEmailPolicy",
        "Users": Array [
          Object {
            "Ref": "SupabaseMailUser6287674D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "SupabaseMailSecret777E0288": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Description": "Supabase - SES SMTP Secret",
        "SecretString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"username\\":\\"",
              Object {
                "Ref": "SupabaseMailAccessKeyA6348E49",
              },
              "\\",\\"password\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "SupabaseMailSmtpPassword3227537A",
                  "Password",
                ],
              },
              "\\",\\"host\\":\\"email-smtp.",
              Object {
                "Ref": "SesRegion",
              },
              ".amazonaws.com\\"}",
            ],
          ],
        },
      },
      "Type": "AWS::SecretsManager::Secret",
      "UpdateReplacePolicy": "Delete",
    },
    "SupabaseMailSmtpPassword3227537A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Region": Object {
          "Ref": "SesRegion",
        },
        "SecretAccessKey": Object {
          "Fn::GetAtt": Array [
            "SupabaseMailAccessKeyA6348E49",
            "SecretAccessKey",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "SupabaseMailGenSmtpPasswordProviderframeworkonEvent3038CFFF",
            "Arn",
          ],
        },
      },
      "Type": "Custom::SmtpPassword",
      "UpdateReplacePolicy": "Delete",
    },
    "SupabaseMailUser6287674D": Object {
      "Type": "AWS::IAM::User",
    },
    "VPCB9E5F0B4": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "VPCIGWB7E252D3": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "VPCPrivateSubnet1DefaultRouteAE1D6490": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet1RouteTableAssociation347902D1": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet1RouteTableBE8A6027",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet1Subnet8BCA10E0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet1RouteTableBE8A6027": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet1Subnet8BCA10E0": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPrivateSubnet2DefaultRouteF4F5CFD2": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "VPCPublicSubnet1NATGatewayE0556630",
        },
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPrivateSubnet2RouteTable0A19E10E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPrivateSubnet2RouteTableAssociation0C73D413": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPrivateSubnet2RouteTable0A19E10E",
        },
        "SubnetId": Object {
          "Ref": "VPCPrivateSubnet2SubnetCFCDAA7A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPrivateSubnet2SubnetCFCDAA7A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet1DefaultRoute91CEF279": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet1EIP6AD938E8": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "VPCPublicSubnet1NATGatewayE0556630": Object {
      "DependsOn": Array [
        "VPCPublicSubnet1DefaultRoute91CEF279",
        "VPCPublicSubnet1RouteTableAssociation0B0896DC",
      ],
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "VPCPublicSubnet1EIP6AD938E8",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "VPCPublicSubnet1RouteTableAssociation0B0896DC": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet1RouteTableFEE4B781",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet1SubnetB4246D30",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet1RouteTableFEE4B781": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet1SubnetB4246D30": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCPublicSubnet2DefaultRouteB7481BBA": Object {
      "DependsOn": Array [
        "VPCVPCGW99B986DC",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "VPCPublicSubnet2RouteTable6F1A15F1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "VPCPublicSubnet2RouteTableAssociation5A808732": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "VPCPublicSubnet2RouteTable6F1A15F1",
        },
        "SubnetId": Object {
          "Ref": "VPCPublicSubnet2Subnet74179F39",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "VPCPublicSubnet2Subnet74179F39": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "Supabase/VPC/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "VPCVPCGW99B986DC": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "VPCIGWB7E252D3",
        },
        "VpcId": Object {
          "Ref": "VPCB9E5F0B4",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "WorkMailNestedStackWorkMailNestedStackResource44BA1505": Object {
      "Condition": "WorkMailEnabled",
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetoSupabaseSesRegion184A3193Ref": Object {
            "Ref": "SesRegion",
          },
          "referencetoSupabaseSupabaseMailSecret09707F68Ref": Object {
            "Ref": "SupabaseMailSecret777E0288",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
              },
              "/2103ad55ee0df7089f3c041bbb1c498315915d609733b5ebc572864e3b413478.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "AuthProvider1CheckClientIdD806CC33": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Equals": Array [
                  Object {
                    "Ref": "AuthProvider1ClientId5614D178",
                  },
                  "",
                ],
              },
            ],
          },
          "AssertDescription": "Provider1 Client Id is must not null, if Provider1 is enabled as external auth provider.",
        },
      ],
      "RuleCondition": Object {
        "Fn::Not": Array [
          Object {
            "Fn::Equals": Array [
              Object {
                "Ref": "AuthProvider1Name740DD3F6",
              },
              "",
            ],
          },
        ],
      },
    },
    "AuthProvider1CheckSecretB8DB1DF7": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Equals": Array [
                  Object {
                    "Ref": "AuthProvider1SecretAE54364F",
                  },
                  "",
                ],
              },
            ],
          },
          "AssertDescription": "Provider1 Client Secret is must not null, if Provider1 is enabled as external auth provider.",
        },
      ],
      "RuleCondition": Object {
        "Fn::Not": Array [
          Object {
            "Fn::Equals": Array [
              Object {
                "Ref": "AuthProvider1Name740DD3F6",
              },
              "",
            ],
          },
        ],
      },
    },
    "AuthProvider2CheckClientId828196E0": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Equals": Array [
                  Object {
                    "Ref": "AuthProvider2ClientIdF3685A2B",
                  },
                  "",
                ],
              },
            ],
          },
          "AssertDescription": "Provider2 Client Id is must not null, if Provider2 is enabled as external auth provider.",
        },
      ],
      "RuleCondition": Object {
        "Fn::Not": Array [
          Object {
            "Fn::Equals": Array [
              Object {
                "Ref": "AuthProvider2Name573986E5",
              },
              "",
            ],
          },
        ],
      },
    },
    "AuthProvider2CheckSecret00A859BE": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Equals": Array [
                  Object {
                    "Ref": "AuthProvider2Secret2662F55E",
                  },
                  "",
                ],
              },
            ],
          },
          "AssertDescription": "Provider2 Client Secret is must not null, if Provider2 is enabled as external auth provider.",
        },
      ],
      "RuleCondition": Object {
        "Fn::Not": Array [
          Object {
            "Fn::Equals": Array [
              Object {
                "Ref": "AuthProvider2Name573986E5",
              },
              "",
            ],
          },
        ],
      },
    },
    "AuthProvider3CheckClientIdF7467574": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Equals": Array [
                  Object {
                    "Ref": "AuthProvider3ClientId8DF3C6F7",
                  },
                  "",
                ],
              },
            ],
          },
          "AssertDescription": "Provider3 Client Id is must not null, if Provider3 is enabled as external auth provider.",
        },
      ],
      "RuleCondition": Object {
        "Fn::Not": Array [
          Object {
            "Fn::Equals": Array [
              Object {
                "Ref": "AuthProvider3NameA8A7785F",
              },
              "",
            ],
          },
        ],
      },
    },
    "AuthProvider3CheckSecret2A0B7A51": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Equals": Array [
                  Object {
                    "Ref": "AuthProvider3Secret29364F33",
                  },
                  "",
                ],
              },
            ],
          },
          "AssertDescription": "Provider3 Client Secret is must not null, if Provider3 is enabled as external auth provider.",
        },
      ],
      "RuleCondition": Object {
        "Fn::Not": Array [
          Object {
            "Fn::Equals": Array [
              Object {
                "Ref": "AuthProvider3NameA8A7785F",
              },
              "",
            ],
          },
        ],
      },
    },
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
    "CheckWorkMailRegion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Contains": Array [
              Array [
                "us-east-1",
                "us-west-2",
                "eu-west-1",
              ],
              Object {
                "Ref": "SesRegion",
              },
            ],
          },
          "AssertDescription": "Amazon WorkMail is supported only in us-east-1, us-west-2 or eu-west-1. Please change Amazon SES Region.",
        },
      ],
      "RuleCondition": Object {
        "Fn::Equals": Array [
          Object {
            "Ref": "EnableWorkMail",
          },
          "true",
        ],
      },
    },
  },
  "Transform": "AWS::SecretsManager-2020-07-23",
}
`;
